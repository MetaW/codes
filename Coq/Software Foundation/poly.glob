DIGEST eebe513722705466a43ec8aa48f2a23f
Fpoly
R306:310 lists <> <> lib
ind 494:501 <> boollist
constr 517:524 <> bool_nil
constr 541:549 <> bool_cons
R528:535 poly <> boollist ind
R557:560 Coq.Init.Logic <> :type_scope:x_'->'_x not
R569:572 Coq.Init.Logic <> :type_scope:x_'->'_x not
R573:580 poly <> boollist ind
R561:568 poly <> boollist ind
R553:556 basic <> bool ind
ind 755:758 <> list
constr 783:785 <> nil
constr 800:803 <> cons
R789:792 poly <> list ind
R808:811 Coq.Init.Logic <> :type_scope:x_'->'_x not
R818:821 Coq.Init.Logic <> :type_scope:x_'->'_x not
R822:825 poly <> list ind
R812:815 poly <> list ind
def 1547:1552 <> repeat
R1566:1566 poly <> X var
R1572:1574 Coq.Init.Datatypes <> nat ind
R1577:1580 poly <> list ind
R1582:1582 poly <> X var
R1594:1594 poly <> n var
R1605:1605 Coq.Init.Datatypes <> O constr
R1610:1612 poly <> nil constr
R1614:1614 poly <> X var
R1620:1620 Coq.Init.Datatypes <> S constr
R1628:1631 poly <> cons constr
R1638:1643 poly <> repeat def
R1647:1647 poly <> x var
R1645:1645 poly <> X var
R1635:1635 poly <> x var
R1633:1633 poly <> X var
def 1669:1680 <> test_repeat1
R1699:1701 Coq.Init.Logic <> :type_scope:x_'='_x not
R1685:1690 poly <> repeat def
R1692:1694 Coq.Init.Datatypes <> nat ind
R1702:1705 poly <> cons constr
R1714:1717 poly <> cons constr
R1726:1728 poly <> nil constr
R1730:1732 Coq.Init.Datatypes <> nat ind
R1719:1721 Coq.Init.Datatypes <> nat ind
R1707:1709 Coq.Init.Datatypes <> nat ind
def 1780:1791 <> test_repeat2
R1815:1817 Coq.Init.Logic <> :type_scope:x_'='_x not
R1796:1801 poly <> repeat def
R1808:1812 basic <> false constr
R1803:1806 basic <> bool ind
R1818:1821 poly <> cons constr
R1835:1837 poly <> nil constr
R1839:1842 basic <> bool ind
R1828:1832 basic <> false constr
R1823:1826 basic <> bool ind
def 2133:2139 <> repeat'
R2158:2158 poly <> n var
R2169:2169 Coq.Init.Datatypes <> O constr
R2174:2176 poly <> nil constr
R2178:2178 poly <> X var
R2184:2184 Coq.Init.Datatypes <> S constr
R2192:2195 poly <> cons constr
R2202:2207 poly <> repeat def
R2211:2211 poly <> x var
R2209:2209 poly <> X var
R2199:2199 poly <> x var
R2197:2197 poly <> X var
def 2364:2370 <> list123
R2377:2380 poly <> cons constr
R2387:2390 poly <> cons constr
R2397:2400 poly <> cons constr
R2407:2409 poly <> nil constr
R2741:2743 poly <> nil constr
R2741:2743 poly <> nil constr
R2760:2763 poly <> cons constr
R2760:2763 poly <> cons constr
R2784:2789 poly <> repeat def
R2784:2789 poly <> repeat def
def 2992:2999 <> list123'
R3004:3007 poly <> cons constr
R3012:3015 poly <> cons constr
R3020:3023 poly <> cons constr
R3027:3029 poly <> nil constr
def 3045:3051 <> list222
R3056:3061 poly <> repeat def
def 3105:3111 <> repeat2
R3125:3125 poly <> X var
R3131:3133 Coq.Init.Datatypes <> nat ind
R3136:3139 poly <> list ind
R3141:3141 poly <> X var
R3180:3180 poly <> n var
R3191:3191 Coq.Init.Datatypes <> O constr
R3196:3198 poly <> nil constr
R3204:3204 Coq.Init.Datatypes <> S constr
R3212:3215 poly <> cons constr
R3220:3226 poly <> repeat2 def
R3228:3228 poly <> x var
R3217:3217 poly <> x var
def 3253:3259 <> list333
R3264:3270 poly <> repeat2 def
ind 3355:3359 <> list'
constr 3443:3446 <> nil'
constr 3532:3536 <> cons'
R3450:3454 poly <> list' ind
R3541:3544 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3550:3553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3554:3558 poly <> list' ind
R3545:3549 poly <> list' ind
def 3615:3617 <> app
R3635:3638 poly <> list ind
R3640:3640 poly <> X var
R3643:3646 poly <> list ind
R3648:3648 poly <> X var
R3661:3662 poly <> l1 var
R3673:3675 poly <> nil constr
R3680:3681 poly <> l2 var
R3687:3690 poly <> cons constr
R3701:3704 poly <> cons constr
R3709:3711 poly <> app def
R3717:3718 poly <> l2 var
def 3739:3741 <> rev
R3755:3758 poly <> list ind
R3760:3760 poly <> X var
R3763:3766 poly <> list ind
R3768:3768 poly <> X var
R3781:3781 poly <> l var
R3792:3794 poly <> nil constr
R3799:3801 poly <> nil constr
R3807:3810 poly <> cons constr
R3819:3821 poly <> app def
R3832:3835 poly <> cons constr
R3839:3841 poly <> nil constr
R3824:3826 poly <> rev def
def 3862:3867 <> length
R3881:3884 poly <> list ind
R3886:3886 poly <> X var
R3889:3891 Coq.Init.Datatypes <> nat ind
R3904:3904 poly <> l var
R3915:3917 poly <> nil constr
R3922:3922 Coq.Init.Datatypes <> O constr
R3928:3931 poly <> cons constr
R3941:3944 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3953:3953 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3945:3950 poly <> length def
R5125:5128 poly <> cons constr
not 5113:5113 <> ::x_':'_x
R5192:5194 poly <> nil constr
not 5183:5183 <> ::'['_']'
R5228:5231 poly <> cons constr
R5239:5242 poly <> cons constr
R5246:5247 poly <> ::'['_']' not
not 5207:5207 <> ::'['_x_','_'..'_','_x_']'
R5278:5280 poly <> app def
not 5265:5265 <> ::x_'++'_x
prf 5354:5362 <> app_nil_r
R5387:5390 poly <> list ind
R5392:5392 poly <> X var
R5403:5405 Coq.Init.Logic <> :type_scope:x_'='_x not
R5397:5400 poly <> ::x_'++'_x not
R5396:5396 poly <> l var
R5401:5402 poly <> ::'['_']' not
R5406:5406 poly <> l var
prf 5527:5535 <> app_assoc
R5564:5567 poly <> list ind
R5569:5569 poly <> X var
R5584:5586 Coq.Init.Logic <> :type_scope:x_'='_x not
R5574:5577 poly <> ::x_'++'_x not
R5573:5573 poly <> l var
R5579:5582 poly <> ::x_'++'_x not
R5578:5578 poly <> m var
R5583:5583 poly <> n var
R5587:5587 poly <> ::x_'++'_x not
R5594:5598 poly <> ::x_'++'_x not
R5589:5592 poly <> ::x_'++'_x not
R5588:5588 poly <> l var
R5593:5593 poly <> m var
R5599:5599 poly <> n var
prf 5713:5722 <> app_length
R5749:5752 poly <> list ind
R5754:5754 poly <> X var
R5773:5775 Coq.Init.Logic <> :type_scope:x_'='_x not
R5758:5763 poly <> length def
R5767:5770 poly <> ::x_'++'_x not
R5766:5766 poly <> n var
R5771:5771 poly <> m var
R5776:5776 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5785:5789 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5798:5798 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5777:5782 poly <> length def
R5784:5784 poly <> n var
R5790:5795 poly <> length def
R5797:5797 poly <> m var
prf 5906:5918 <> rev_app_distr
R5947:5950 poly <> list ind
R5952:5952 poly <> X var
R5970:5972 Coq.Init.Logic <> :type_scope:x_'='_x not
R5956:5958 poly <> rev def
R5963:5966 poly <> ::x_'++'_x not
R5961:5962 poly <> l1 var
R5967:5968 poly <> l2 var
R5979:5982 poly <> ::x_'++'_x not
R5973:5975 poly <> rev def
R5977:5978 poly <> l2 var
R5983:5985 poly <> rev def
R5987:5988 poly <> l1 var
R6046:6054 poly <> app_nil_r thm
R6046:6054 poly <> app_nil_r thm
R6046:6054 poly <> app_nil_r thm
R6107:6115 poly <> app_assoc thm
R6107:6115 poly <> app_assoc thm
R6107:6115 poly <> app_assoc thm
prf 6143:6153 <> rev_rev_app
R6177:6177 poly <> X var
R6183:6186 poly <> list ind
R6188:6188 poly <> X var
R6212:6214 Coq.Init.Logic <> :type_scope:x_'='_x not
R6192:6194 poly <> rev def
R6197:6197 poly <> ::x_'++'_x not
R6203:6207 poly <> ::x_'++'_x not
R6198:6200 poly <> rev def
R6202:6202 poly <> l var
R6208:6208 poly <> ::'['_x_','_'..'_','_x_']' not
R6210:6210 poly <> ::'['_x_','_'..'_','_x_']' not
R6209:6209 poly <> x var
R6216:6216 poly <> ::x_':'_x not
R6215:6215 poly <> x var
R6217:6219 poly <> rev def
R6222:6224 poly <> rev def
R6226:6226 poly <> l var
R6311:6323 poly <> rev_app_distr thm
R6311:6323 poly <> rev_app_distr thm
R6311:6323 poly <> rev_app_distr thm
prf 6371:6384 <> rev_involutive
R6409:6412 poly <> list ind
R6414:6414 poly <> X var
R6429:6431 Coq.Init.Logic <> :type_scope:x_'='_x not
R6418:6420 poly <> rev def
R6423:6425 poly <> rev def
R6427:6427 poly <> l var
R6432:6432 poly <> l var
R6504:6514 poly <> rev_rev_app thm
R6504:6514 poly <> rev_rev_app thm
R6504:6514 poly <> rev_rev_app thm
ind 6675:6678 <> prod
constr 6705:6708 <> pair
R6713:6716 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6718:6721 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6722:6725 poly <> prod ind
R6743:6746 poly <> pair constr
R6743:6746 poly <> pair constr
R6787:6790 poly <> pair constr
not 6771:6771 <> ::'('_x_','_x_')'
def 6831:6833 <> fst
R6850:6853 poly <> prod ind
R6857:6857 poly <> Y var
R6855:6855 poly <> X var
R6860:6860 poly <> X var
R6873:6873 poly <> p var
R6884:6884 poly <> ::'('_x_','_x_')' not
R6886:6886 poly <> ::'('_x_','_x_')' not
R6888:6888 poly <> ::'('_x_','_x_')' not
def 6912:6914 <> snd
R6931:6934 poly <> prod ind
R6938:6938 poly <> Y var
R6936:6936 poly <> X var
R6941:6941 poly <> Y var
R6954:6954 poly <> p var
R6965:6965 poly <> ::'('_x_','_x_')' not
R6967:6967 poly <> ::'('_x_','_x_')' not
R6969:6969 poly <> ::'('_x_','_x_')' not
def 6994:7000 <> combine
R7018:7021 poly <> list ind
R7023:7023 poly <> X var
R7031:7034 poly <> list ind
R7036:7036 poly <> Y var
R7039:7042 poly <> list ind
R7045:7048 poly <> prod ind
R7052:7052 poly <> Y var
R7050:7050 poly <> X var
R7069:7070 poly <> l2 var
R7066:7067 poly <> l1 var
R7081:7082 poly <> ::'['_']' not
R7089:7090 poly <> ::'['_']' not
R7098:7099 poly <> ::'['_']' not
R7104:7105 poly <> ::'['_']' not
R7112:7112 poly <> ::x_':'_x not
R7117:7117 poly <> ::x_':'_x not
R7129:7130 poly <> ::x_':'_x not
R7144:7144 poly <> ::x_':'_x not
R7124:7124 poly <> ::'('_x_','_x_')' not
R7126:7126 poly <> ::'('_x_','_x_')' not
R7128:7128 poly <> ::'('_x_','_x_')' not
R7131:7137 poly <> combine def
def 7165:7169 <> unzip
R7185:7188 poly <> list ind
R7191:7194 poly <> prod ind
R7198:7198 poly <> Y var
R7196:7196 poly <> X var
R7202:7205 poly <> prod ind
R7217:7220 poly <> list ind
R7222:7222 poly <> Y var
R7208:7211 poly <> list ind
R7213:7213 poly <> X var
R7237:7237 poly <> l var
R7249:7250 poly <> ::'['_']' not
R7255:7255 poly <> ::'('_x_','_x_')' not
R7258:7258 poly <> ::'('_x_','_x_')' not
R7261:7261 poly <> ::'('_x_','_x_')' not
R7256:7257 poly <> ::'['_']' not
R7259:7260 poly <> ::'['_']' not
R7269:7269 poly <> ::x_':'_x not
R7276:7276 poly <> ::'('_x_','_x_')' not
R7299:7300 poly <> ::'('_x_','_x_')' not
R7323:7323 poly <> ::'('_x_','_x_')' not
R7277:7277 poly <> ::x_':'_x not
R7283:7284 poly <> ::x_':'_x not
R7278:7280 poly <> fst def
R7285:7287 poly <> fst def
R7290:7294 poly <> unzip def
R7301:7301 poly <> ::x_':'_x not
R7307:7308 poly <> ::x_':'_x not
R7302:7304 poly <> snd def
R7309:7311 poly <> snd def
R7314:7318 poly <> unzip def
ind 7688:7693 <> option
constr 7718:7721 <> none
constr 7738:7741 <> some
R7725:7730 poly <> option ind
R7746:7749 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7750:7755 poly <> option ind
R7771:7774 poly <> none constr
R7771:7774 poly <> none constr
R7791:7794 poly <> some constr
R7791:7794 poly <> some constr
def 7858:7866 <> nth_error
R7880:7883 poly <> list ind
R7885:7885 poly <> X var
R7891:7893 Coq.Init.Datatypes <> nat ind
R7896:7901 poly <> option ind
R7903:7903 poly <> X var
R7918:7918 poly <> l var
R7916:7916 poly <> n var
R7931:7932 poly <> ::'['_']' not
R7937:7940 poly <> none constr
R7946:7946 Coq.Init.Datatypes <> O constr
R7949:7949 poly <> ::x_':'_x not
R7956:7959 poly <> some constr
R7967:7967 Coq.Init.Datatypes <> S constr
R7973:7973 poly <> ::x_':'_x not
R7980:7988 poly <> nth_error def
def 8015:8022 <> hd_error
R8036:8039 poly <> list ind
R8041:8041 poly <> X var
R8044:8049 poly <> option ind
R8051:8051 poly <> X var
R8064:8064 poly <> l var
R8075:8076 poly <> ::'['_']' not
R8081:8084 poly <> none constr
R8091:8091 poly <> ::x_':'_x not
R8098:8101 poly <> some constr
def 8289:8298 <> doit3times
R8313:8316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8317:8317 poly <> X var
R8312:8312 poly <> X var
R8323:8323 poly <> X var
R8327:8327 poly <> X var
R8334:8334 poly <> f var
R8337:8337 poly <> f var
R8340:8340 poly <> f var
R8342:8342 poly <> x var
def 8356:8370 <> test_doit3times
R8397:8399 Coq.Init.Logic <> :type_scope:x_'='_x not
R8376:8385 poly <> doit3times def
R8387:8394 basic <> minustwo def
def 8471:8476 <> filter
R8491:8494 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8495:8498 basic <> bool ind
R8490:8490 poly <> X var
R8504:8507 poly <> list ind
R8509:8509 poly <> X var
R8512:8515 poly <> list ind
R8517:8517 poly <> X var
R8530:8530 poly <> l var
R8541:8542 poly <> ::'['_']' not
R8547:8548 poly <> ::'['_']' not
R8555:8555 poly <> ::x_':'_x not
R8568:8568 poly <> f var
R8591:8594 basic <> true constr
R8600:8601 poly <> ::x_':'_x not
R8613:8613 poly <> ::x_':'_x not
R8602:8607 poly <> filter def
R8609:8609 poly <> f var
R8629:8633 basic <> false constr
R8638:8643 poly <> filter def
R8645:8645 poly <> f var
def 8682:8692 <> test_filter
R8724:8726 Coq.Init.Logic <> :type_scope:x_'='_x not
R8698:8703 poly <> filter def
R8711:8711 poly <> ::'['_x_','_'..'_','_x_']' not
R8713:8713 poly <> ::'['_x_','_'..'_','_x_']' not
R8715:8715 poly <> ::'['_x_','_'..'_','_x_']' not
R8717:8717 poly <> ::'['_x_','_'..'_','_x_']' not
R8719:8719 poly <> ::'['_x_','_'..'_','_x_']' not
R8721:8721 poly <> ::'['_x_','_'..'_','_x_']' not
R8723:8723 poly <> ::'['_x_','_'..'_','_x_']' not
R8705:8709 basic <> evenb def
R8727:8727 poly <> ::'['_x_','_'..'_','_x_']' not
R8729:8729 poly <> ::'['_x_','_'..'_','_x_']' not
R8731:8731 poly <> ::'['_x_','_'..'_','_x_']' not
R8733:8733 poly <> ::'['_x_','_'..'_','_x_']' not
def 9202:9217 <> test_doit3times2
R9251:9253 Coq.Init.Logic <> :type_scope:x_'='_x not
R9222:9231 poly <> doit3times def
R9244:9246 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R9243:9243 poly <> x var
R9247:9247 poly <> x var
def 9367:9372 <> natltb
R9379:9381 Coq.Init.Datatypes <> nat ind
R9385:9388 basic <> bool ind
R9403:9403 poly <> y var
R9401:9401 poly <> x var
R9414:9414 Coq.Init.Datatypes <> O constr
R9416:9416 Coq.Init.Datatypes <> O constr
R9421:9425 basic <> false constr
R9431:9431 Coq.Init.Datatypes <> O constr
R9433:9433 Coq.Init.Datatypes <> S constr
R9441:9445 basic <> false constr
R9451:9451 Coq.Init.Datatypes <> S constr
R9456:9456 Coq.Init.Datatypes <> O constr
R9461:9464 basic <> true constr
R9470:9470 Coq.Init.Datatypes <> S constr
R9475:9475 Coq.Init.Datatypes <> S constr
R9483:9488 poly <> natltb def
def 9517:9531 <> filter_even_gt7
R9536:9539 poly <> list ind
R9541:9543 Coq.Init.Datatypes <> nat ind
R9547:9550 poly <> list ind
R9552:9554 Coq.Init.Datatypes <> nat ind
R9561:9566 poly <> filter def
R9607:9607 poly <> l var
R9578:9581 basic <> andb def
R9594:9599 poly <> natltb def
R9601:9601 poly <> x var
R9584:9588 basic <> evenb def
R9590:9590 poly <> x var
def 9619:9638 <> test_filter_even_gt7
R9676:9678 Coq.Init.Logic <> :type_scope:x_'='_x not
R9644:9658 poly <> filter_even_gt7 def
R9660:9660 poly <> ::'['_x_','_'..'_','_x_']' not
R9662:9662 poly <> ::'['_x_','_'..'_','_x_']' not
R9664:9664 poly <> ::'['_x_','_'..'_','_x_']' not
R9666:9666 poly <> ::'['_x_','_'..'_','_x_']' not
R9668:9668 poly <> ::'['_x_','_'..'_','_x_']' not
R9670:9670 poly <> ::'['_x_','_'..'_','_x_']' not
R9672:9672 poly <> ::'['_x_','_'..'_','_x_']' not
R9675:9675 poly <> ::'['_x_','_'..'_','_x_']' not
R9679:9679 poly <> ::'['_x_','_'..'_','_x_']' not
R9681:9681 poly <> ::'['_x_','_'..'_','_x_']' not
R9684:9684 poly <> ::'['_x_','_'..'_','_x_']' not
def 9720:9728 <> partition
R9743:9746 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9747:9750 basic <> bool ind
R9742:9742 poly <> X var
R9756:9759 poly <> list ind
R9761:9761 poly <> X var
R9765:9768 poly <> prod ind
R9780:9783 poly <> list ind
R9785:9785 poly <> X var
R9771:9774 poly <> list ind
R9776:9776 poly <> X var
R9799:9799 poly <> l var
R9810:9811 poly <> ::'['_']' not
R9816:9816 poly <> ::'('_x_','_x_')' not
R9819:9819 poly <> ::'('_x_','_x_')' not
R9822:9822 poly <> ::'('_x_','_x_')' not
R9817:9818 poly <> ::'['_']' not
R9820:9821 poly <> ::'['_']' not
R9829:9829 poly <> ::x_':'_x not
R9839:9839 poly <> f var
R9919:9919 poly <> ::'('_x_','_x_')' not
R9940:9941 poly <> ::'('_x_','_x_')' not
R9964:9964 poly <> ::'('_x_','_x_')' not
R9920:9922 poly <> fst def
R9925:9933 poly <> partition def
R9935:9935 poly <> f var
R9943:9943 poly <> ::x_':'_x not
R9944:9946 poly <> snd def
R9949:9957 poly <> partition def
R9959:9959 poly <> f var
R9848:9848 poly <> ::'('_x_','_x_')' not
R9871:9872 poly <> ::'('_x_','_x_')' not
R9893:9893 poly <> ::'('_x_','_x_')' not
R9850:9850 poly <> ::x_':'_x not
R9851:9853 poly <> fst def
R9856:9864 poly <> partition def
R9866:9866 poly <> f var
R9873:9875 poly <> snd def
R9878:9886 poly <> partition def
R9888:9888 poly <> f var
def 9983:9996 <> test_partition
R10029:10031 Coq.Init.Logic <> :type_scope:x_'='_x not
R10002:10010 poly <> partition def
R10018:10018 poly <> ::'['_x_','_'..'_','_x_']' not
R10020:10020 poly <> ::'['_x_','_'..'_','_x_']' not
R10022:10022 poly <> ::'['_x_','_'..'_','_x_']' not
R10024:10024 poly <> ::'['_x_','_'..'_','_x_']' not
R10026:10026 poly <> ::'['_x_','_'..'_','_x_']' not
R10028:10028 poly <> ::'['_x_','_'..'_','_x_']' not
R10012:10016 basic <> evenb def
R10032:10032 poly <> ::'('_x_','_x_')' not
R10038:10038 poly <> ::'('_x_','_x_')' not
R10046:10046 poly <> ::'('_x_','_x_')' not
R10033:10033 poly <> ::'['_x_','_'..'_','_x_']' not
R10035:10035 poly <> ::'['_x_','_'..'_','_x_']' not
R10037:10037 poly <> ::'['_x_','_'..'_','_x_']' not
R10039:10039 poly <> ::'['_x_','_'..'_','_x_']' not
R10041:10041 poly <> ::'['_x_','_'..'_','_x_']' not
R10043:10043 poly <> ::'['_x_','_'..'_','_x_']' not
R10045:10045 poly <> ::'['_x_','_'..'_','_x_']' not
def 10079:10093 <> test_partition2
R10133:10135 Coq.Init.Logic <> :type_scope:x_'='_x not
R10099:10107 poly <> partition def
R10126:10126 poly <> ::'['_x_','_'..'_','_x_']' not
R10128:10128 poly <> ::'['_x_','_'..'_','_x_']' not
R10130:10130 poly <> ::'['_x_','_'..'_','_x_']' not
R10132:10132 poly <> ::'['_x_','_'..'_','_x_']' not
R10119:10123 basic <> false constr
R10136:10136 poly <> ::'('_x_','_x_')' not
R10139:10139 poly <> ::'('_x_','_x_')' not
R10147:10147 poly <> ::'('_x_','_x_')' not
R10137:10138 poly <> ::'['_']' not
R10140:10140 poly <> ::'['_x_','_'..'_','_x_']' not
R10142:10142 poly <> ::'['_x_','_'..'_','_x_']' not
R10144:10144 poly <> ::'['_x_','_'..'_','_x_']' not
R10146:10146 poly <> ::'['_x_','_'..'_','_x_']' not
def 10233:10235 <> map
R10253:10256 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10257:10257 poly <> Y var
R10252:10252 poly <> X var
R10263:10266 poly <> list ind
R10268:10268 poly <> X var
R10272:10275 poly <> list ind
R10277:10277 poly <> Y var
R10290:10290 poly <> l var
R10301:10302 poly <> ::'['_']' not
R10307:10308 poly <> ::'['_']' not
R10315:10315 poly <> ::x_':'_x not
R10322:10322 poly <> ::x_':'_x not
R10326:10328 poly <> ::x_':'_x not
R10337:10337 poly <> ::x_':'_x not
R10323:10323 poly <> f var
R10329:10331 poly <> map def
R10333:10333 poly <> f var
def 10355:10363 <> test_map1
R10400:10402 Coq.Init.Logic <> :type_scope:x_'='_x not
R10369:10371 poly <> map def
R10393:10393 poly <> ::'['_x_','_'..'_','_x_']' not
R10395:10395 poly <> ::'['_x_','_'..'_','_x_']' not
R10397:10397 poly <> ::'['_x_','_'..'_','_x_']' not
R10399:10399 poly <> ::'['_x_','_'..'_','_x_']' not
R10383:10386 Coq.Init.Peano <> plus syndef
R10390:10390 poly <> x var
R10403:10403 poly <> ::'['_x_','_'..'_','_x_']' not
R10405:10405 poly <> ::'['_x_','_'..'_','_x_']' not
R10407:10407 poly <> ::'['_x_','_'..'_','_x_']' not
R10409:10409 poly <> ::'['_x_','_'..'_','_x_']' not
def 10447:10455 <> test_map2
R10482:10484 Coq.Init.Logic <> :type_scope:x_'='_x not
R10461:10463 poly <> map def
R10471:10471 poly <> ::'['_x_','_'..'_','_x_']' not
R10473:10473 poly <> ::'['_x_','_'..'_','_x_']' not
R10475:10475 poly <> ::'['_x_','_'..'_','_x_']' not
R10477:10477 poly <> ::'['_x_','_'..'_','_x_']' not
R10479:10479 poly <> ::'['_x_','_'..'_','_x_']' not
R10481:10481 poly <> ::'['_x_','_'..'_','_x_']' not
R10465:10469 basic <> evenb def
R10485:10485 poly <> ::'['_x_','_'..'_','_x_']' not
R10491:10491 poly <> ::'['_x_','_'..'_','_x_']' not
R10496:10496 poly <> ::'['_x_','_'..'_','_x_']' not
R10502:10502 poly <> ::'['_x_','_'..'_','_x_']' not
R10507:10507 poly <> ::'['_x_','_'..'_','_x_']' not
R10513:10513 poly <> ::'['_x_','_'..'_','_x_']' not
R10508:10512 basic <> false constr
R10503:10506 basic <> true constr
R10497:10501 basic <> false constr
R10492:10495 basic <> true constr
R10486:10490 basic <> false constr
def 10550:10558 <> test_map3
R10607:10609 Coq.Init.Logic <> :type_scope:x_'='_x not
R10564:10566 poly <> map def
R10602:10602 poly <> ::'['_x_','_'..'_','_x_']' not
R10604:10604 poly <> ::'['_x_','_'..'_','_x_']' not
R10606:10606 poly <> ::'['_x_','_'..'_','_x_']' not
R10578:10578 poly <> ::'['_x_','_'..'_','_x_']' not
R10586:10587 poly <> ::'['_x_','_'..'_','_x_']' not
R10599:10599 poly <> ::'['_x_','_'..'_','_x_']' not
R10588:10592 basic <> evenb def
R10595:10595 Coq.Init.Datatypes <> S constr
R10597:10597 poly <> x var
R10579:10583 basic <> evenb def
R10585:10585 poly <> x var
R10610:10610 poly <> ::'['_x_','_'..'_','_x_']' not
R10623:10623 poly <> ::'['_x_','_'..'_','_x_']' not
R10636:10636 poly <> ::'['_x_','_'..'_','_x_']' not
R10624:10624 poly <> ::'['_x_','_'..'_','_x_']' not
R10630:10630 poly <> ::'['_x_','_'..'_','_x_']' not
R10635:10635 poly <> ::'['_x_','_'..'_','_x_']' not
R10631:10634 basic <> true constr
R10625:10629 basic <> false constr
R10611:10611 poly <> ::'['_x_','_'..'_','_x_']' not
R10616:10616 poly <> ::'['_x_','_'..'_','_x_']' not
R10622:10622 poly <> ::'['_x_','_'..'_','_x_']' not
R10617:10621 basic <> false constr
R10612:10615 basic <> true constr
prf 10691:10699 <> map_distr
R10727:10730 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10731:10731 poly <> Y var
R10726:10726 poly <> X var
R10737:10737 poly <> X var
R10743:10746 poly <> list ind
R10748:10748 poly <> X var
R10768:10770 Coq.Init.Logic <> :type_scope:x_'='_x not
R10752:10754 poly <> map def
R10760:10763 poly <> ::x_'++'_x not
R10759:10759 poly <> l var
R10764:10764 poly <> ::'['_x_','_'..'_','_x_']' not
R10766:10766 poly <> ::'['_x_','_'..'_','_x_']' not
R10765:10765 poly <> x var
R10756:10756 poly <> f var
R10771:10771 poly <> ::x_'++'_x not
R10779:10783 poly <> ::x_'++'_x not
R10772:10774 poly <> map def
R10778:10778 poly <> l var
R10776:10776 poly <> f var
R10784:10786 poly <> map def
R10790:10790 poly <> ::'['_x_','_'..'_','_x_']' not
R10792:10792 poly <> ::'['_x_','_'..'_','_x_']' not
R10791:10791 poly <> x var
R10788:10788 poly <> f var
prf 10903:10909 <> map_rev
R10938:10941 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10942:10942 poly <> Y var
R10937:10937 poly <> X var
R10948:10951 poly <> list ind
R10953:10953 poly <> X var
R10970:10972 Coq.Init.Logic <> :type_scope:x_'='_x not
R10957:10959 poly <> map def
R10964:10966 poly <> rev def
R10968:10968 poly <> l var
R10961:10961 poly <> f var
R10973:10975 poly <> rev def
R10978:10980 poly <> map def
R10984:10984 poly <> l var
R10982:10982 poly <> f var
R11057:11065 poly <> map_distr thm
R11057:11065 poly <> map_distr thm
R11057:11065 poly <> map_distr thm
def 11157:11160 <> fold
R11177:11180 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11182:11185 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11186:11186 poly <> Y var
R11181:11181 poly <> Y var
R11176:11176 poly <> X var
R11192:11195 poly <> list ind
R11197:11197 poly <> X var
R11203:11203 poly <> Y var
R11207:11207 poly <> Y var
R11220:11220 poly <> l var
R11231:11232 poly <> ::'['_']' not
R11237:11237 poly <> e var
R11244:11244 poly <> ::x_':'_x not
R11251:11251 poly <> f var
R11256:11259 poly <> fold def
R11266:11266 poly <> e var
R11261:11261 poly <> f var
def 11504:11513 <> fold_test1
R11540:11542 Coq.Init.Logic <> :type_scope:x_'='_x not
R11519:11522 poly <> fold def
R11529:11529 poly <> ::'['_x_','_'..'_','_x_']' not
R11531:11531 poly <> ::'['_x_','_'..'_','_x_']' not
R11533:11533 poly <> ::'['_x_','_'..'_','_x_']' not
R11535:11535 poly <> ::'['_x_','_'..'_','_x_']' not
R11537:11537 poly <> ::'['_x_','_'..'_','_x_']' not
R11524:11527 Coq.Init.Peano <> mult syndef
def 11581:11590 <> fold_test2
R11633:11635 Coq.Init.Logic <> :type_scope:x_'='_x not
R11596:11599 poly <> fold def
R11629:11632 basic <> true constr
R11606:11606 poly <> ::'['_x_','_'..'_','_x_']' not
R11611:11611 poly <> ::'['_x_','_'..'_','_x_']' not
R11617:11617 poly <> ::'['_x_','_'..'_','_x_']' not
R11622:11622 poly <> ::'['_x_','_'..'_','_x_']' not
R11627:11627 poly <> ::'['_x_','_'..'_','_x_']' not
R11623:11626 basic <> true constr
R11618:11621 basic <> true constr
R11612:11616 basic <> false constr
R11607:11610 basic <> true constr
R11601:11604 basic <> andb def
R11636:11640 basic <> false constr
def 11677:11686 <> fold_test3
R11722:11724 Coq.Init.Logic <> :type_scope:x_'='_x not
R11692:11695 poly <> fold def
R11720:11721 poly <> ::'['_']' not
R11701:11701 poly <> ::'['_x_','_'..'_','_x_']' not
R11707:11707 poly <> ::'['_x_','_'..'_','_x_']' not
R11710:11710 poly <> ::'['_x_','_'..'_','_x_']' not
R11718:11718 poly <> ::'['_x_','_'..'_','_x_']' not
R11711:11711 poly <> ::'['_x_','_'..'_','_x_']' not
R11713:11713 poly <> ::'['_x_','_'..'_','_x_']' not
R11715:11715 poly <> ::'['_x_','_'..'_','_x_']' not
R11717:11717 poly <> ::'['_x_','_'..'_','_x_']' not
R11708:11709 poly <> ::'['_']' not
R11702:11702 poly <> ::'['_x_','_'..'_','_x_']' not
R11704:11704 poly <> ::'['_x_','_'..'_','_x_']' not
R11706:11706 poly <> ::'['_x_','_'..'_','_x_']' not
R11697:11699 poly <> app def
R11725:11725 poly <> ::'['_x_','_'..'_','_x_']' not
R11727:11727 poly <> ::'['_x_','_'..'_','_x_']' not
R11729:11729 poly <> ::'['_x_','_'..'_','_x_']' not
R11731:11731 poly <> ::'['_x_','_'..'_','_x_']' not
R11733:11733 poly <> ::'['_x_','_'..'_','_x_']' not
R11735:11735 poly <> ::'['_x_','_'..'_','_x_']' not
def 11858:11862 <> plusx
R11867:11869 Coq.Init.Datatypes <> nat ind
R11876:11879 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11880:11882 Coq.Init.Datatypes <> nat ind
R11873:11875 Coq.Init.Datatypes <> nat ind
R11895:11897 Coq.Init.Datatypes <> nat ind
R11903:11905 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R11902:11902 poly <> t var
R11906:11906 poly <> x var
def 11966:11971 <> plusx2
R11976:11978 Coq.Init.Datatypes <> nat ind
R11985:11988 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11989:11991 Coq.Init.Datatypes <> nat ind
R11982:11984 Coq.Init.Datatypes <> nat ind
R11999:12002 Coq.Init.Peano <> plus syndef
R12004:12004 poly <> x var
def 12019:12024 <> plusx3
R12029:12032 Coq.Init.Peano <> plus syndef
mod 12079:12086 <> Exercise
def 12125:12135 Exercise fold_length
R12149:12152 poly Exercise list ind
R12154:12154 poly <> X var
R12157:12159 Coq.Init.Datatypes <> nat ind
R12166:12169 poly Exercise fold def
R12190:12190 poly <> l var
R12184:12186 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12183:12183 poly <> n var
prf 12243:12262 Exercise fold_length_property
R12287:12290 poly Exercise list ind
R12292:12292 poly <> X var
R12298:12298 poly <> X var
R12321:12323 Coq.Init.Logic <> :type_scope:x_'='_x not
R12302:12312 poly Exercise fold_length def
R12316:12318 poly <> ::x_':'_x not
R12315:12315 poly <> x var
R12319:12319 poly <> l var
R12324:12324 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12338:12341 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12325:12335 poly Exercise fold_length def
R12337:12337 poly <> l var
prf 12421:12439 Exercise fold_length_correct
R12465:12468 poly Exercise list ind
R12470:12470 poly <> X var
R12487:12489 Coq.Init.Logic <> :type_scope:x_'='_x not
R12474:12484 poly Exercise fold_length def
R12486:12486 poly <> l var
R12490:12495 poly Exercise length def
R12497:12497 poly <> l var
R12598:12617 poly Exercise fold_length_property thm
R12598:12617 poly Exercise fold_length_property thm
R12598:12617 poly Exercise fold_length_property thm
R12654:12662 induction <> plus_n_Sm thm
R12654:12662 induction <> plus_n_Sm thm
R12654:12662 induction <> plus_n_Sm thm
R12681:12688 Coq.Init.Peano <> plus_n_O thm
R12681:12688 Coq.Init.Peano <> plus_n_O thm
R12681:12688 Coq.Init.Peano <> plus_n_O thm
def 12748:12755 Exercise fold_map
R12772:12775 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12776:12776 poly <> Y var
R12771:12771 poly <> X var
R12782:12785 poly Exercise list ind
R12787:12787 poly <> X var
R12790:12793 poly Exercise list ind
R12795:12795 poly <> Y var
R12801:12804 poly Exercise fold def
R12829:12830 poly <> ::'['_']' not
R12827:12827 poly <> l var
R12818:12818 poly <> ::x_':'_x not
R12822:12823 poly <> ::x_':'_x not
R12819:12819 poly <> f var
R12821:12821 poly <> h var
R12824:12824 poly <> t var
prf 12843:12858 Exercise fold_map_correct
R12887:12890 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12891:12891 poly <> Y var
R12886:12886 poly <> X var
R12897:12900 poly Exercise list ind
R12902:12902 poly <> X var
R12923:12925 Coq.Init.Logic <> :type_scope:x_'='_x not
R12911:12918 poly Exercise fold_map def
R12922:12922 poly <> l var
R12920:12920 poly <> f var
R12926:12928 poly Exercise map def
R12932:12932 poly <> l var
R12930:12930 poly <> f var
def 13068:13077 Exercise prod_curry
R13095:13095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13104:13108 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13109:13109 poly <> K var
R13096:13099 poly Exercise prod ind
R13103:13103 poly <> Y var
R13101:13101 poly <> X var
R13115:13115 poly <> X var
R13121:13121 poly <> Y var
R13124:13124 poly <> K var
R13129:13129 poly <> f var
R13131:13131 poly <> ::'('_x_','_x_')' not
R13133:13133 poly <> ::'('_x_','_x_')' not
R13135:13135 poly <> ::'('_x_','_x_')' not
R13132:13132 poly <> x var
R13134:13134 poly <> y var
def 13167:13178 Exercise prod_uncurry
R13197:13200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13202:13205 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13206:13206 poly <> K var
R13201:13201 poly <> Y var
R13196:13196 poly <> X var
R13212:13215 poly Exercise prod ind
R13219:13219 poly <> Y var
R13217:13217 poly <> X var
R13222:13222 poly <> K var
R13229:13229 poly <> f var
R13240:13242 poly Exercise snd def
R13244:13244 poly <> p var
R13232:13234 poly Exercise fst def
R13236:13236 poly <> p var
prf 13257:13269 Exercise uncurry_curry
R13304:13307 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13309:13312 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13313:13313 poly <> K var
R13308:13308 poly <> Y var
R13303:13303 poly <> X var
R13319:13319 poly <> X var
R13325:13325 poly <> Y var
R13361:13363 Coq.Init.Logic <> :type_scope:x_'='_x not
R13329:13338 poly Exercise prod_curry def
R13360:13360 poly <> y var
R13358:13358 poly <> x var
R13341:13352 poly Exercise prod_uncurry def
R13354:13354 poly <> f var
R13364:13364 poly <> f var
R13368:13368 poly <> y var
R13366:13366 poly <> x var
prf 13412:13424 Exercise curry_uncurry
R13465:13468 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13469:13469 poly <> K var
R13457:13460 poly Exercise prod ind
R13464:13464 poly <> Y var
R13462:13462 poly <> X var
R13476:13479 poly Exercise prod ind
R13483:13483 poly <> Y var
R13481:13481 poly <> X var
R13517:13519 Coq.Init.Logic <> :type_scope:x_'='_x not
R13487:13498 poly Exercise prod_uncurry def
R13516:13516 poly <> p var
R13501:13510 poly Exercise prod_curry def
R13512:13512 poly <> f var
R13520:13520 poly <> f var
R13522:13522 poly <> p var
R13581:13588 poly Exercise <> mod
