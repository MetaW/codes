DIGEST b7e3d76feb32faf5b9181a1ea0ee7bdc
FE_tactics
R275:280 D_poly <> <> lib
R298:304 C_lists <> <> lib
prf 438:443 <> silly1
R465:467 Coq.Init.Datatypes <> nat ind
R476:479 Coq.Init.Logic <> :type_scope:x_'->'_x not
R493:496 Coq.Init.Logic <> :type_scope:x_'->'_x not
R502:504 Coq.Init.Logic <> :type_scope:x_'='_x not
R497:497 D_poly <> ::'['_x_','_'..'_','_x_']' not
R499:499 D_poly <> ::'['_x_','_'..'_','_x_']' not
R501:501 D_poly <> ::'['_x_','_'..'_','_x_']' not
R500:500 E_tactics <> o var
R498:498 E_tactics <> n var
R505:505 D_poly <> ::'['_x_','_'..'_','_x_']' not
R507:507 D_poly <> ::'['_x_','_'..'_','_x_']' not
R509:509 D_poly <> ::'['_x_','_'..'_','_x_']' not
R508:508 E_tactics <> p var
R506:506 E_tactics <> m var
R485:487 Coq.Init.Logic <> :type_scope:x_'='_x not
R480:480 D_poly <> ::'['_x_','_'..'_','_x_']' not
R482:482 D_poly <> ::'['_x_','_'..'_','_x_']' not
R484:484 D_poly <> ::'['_x_','_'..'_','_x_']' not
R483:483 E_tactics <> o var
R481:481 E_tactics <> n var
R488:488 D_poly <> ::'['_x_','_'..'_','_x_']' not
R490:490 D_poly <> ::'['_x_','_'..'_','_x_']' not
R492:492 D_poly <> ::'['_x_','_'..'_','_x_']' not
R491:491 E_tactics <> p var
R489:489 E_tactics <> n var
R472:474 Coq.Init.Logic <> :type_scope:x_'='_x not
R471:471 E_tactics <> n var
R475:475 E_tactics <> m var
prf 671:676 <> silly2
R698:700 Coq.Init.Datatypes <> nat ind
R709:712 Coq.Init.Logic <> :type_scope:x_'->'_x not
R713:713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R753:758 Coq.Init.Logic <> :type_scope:x_'->'_x not
R764:766 Coq.Init.Logic <> :type_scope:x_'='_x not
R759:759 D_poly <> ::'['_x_','_'..'_','_x_']' not
R761:761 D_poly <> ::'['_x_','_'..'_','_x_']' not
R763:763 D_poly <> ::'['_x_','_'..'_','_x_']' not
R762:762 E_tactics <> o var
R760:760 E_tactics <> n var
R767:767 D_poly <> ::'['_x_','_'..'_','_x_']' not
R769:769 D_poly <> ::'['_x_','_'..'_','_x_']' not
R771:771 D_poly <> ::'['_x_','_'..'_','_x_']' not
R770:770 E_tactics <> p var
R768:768 E_tactics <> m var
R726:728 Coq.Init.Datatypes <> nat ind
R736:739 Coq.Init.Logic <> :type_scope:x_'->'_x not
R745:747 Coq.Init.Logic <> :type_scope:x_'='_x not
R740:740 D_poly <> ::'['_x_','_'..'_','_x_']' not
R742:742 D_poly <> ::'['_x_','_'..'_','_x_']' not
R744:744 D_poly <> ::'['_x_','_'..'_','_x_']' not
R743:743 E_tactics <> o var
R741:741 E_tactics <> q var
R748:748 D_poly <> ::'['_x_','_'..'_','_x_']' not
R750:750 D_poly <> ::'['_x_','_'..'_','_x_']' not
R752:752 D_poly <> ::'['_x_','_'..'_','_x_']' not
R751:751 E_tactics <> p var
R749:749 E_tactics <> r var
R733:734 Coq.Init.Logic <> :type_scope:x_'='_x not
R732:732 E_tactics <> q var
R735:735 E_tactics <> r var
R705:707 Coq.Init.Logic <> :type_scope:x_'='_x not
R704:704 E_tactics <> n var
R708:708 E_tactics <> m var
prf 984:990 <> silly2a
R1008:1010 Coq.Init.Datatypes <> nat ind
R1027:1030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1031:1031 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1076:1081 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1085:1087 Coq.Init.Logic <> :type_scope:x_'='_x not
R1082:1082 D_poly <> ::'['_x_','_'..'_','_x_']' not
R1084:1084 D_poly <> ::'['_x_','_'..'_','_x_']' not
R1083:1083 E_tactics <> n var
R1088:1088 D_poly <> ::'['_x_','_'..'_','_x_']' not
R1090:1090 D_poly <> ::'['_x_','_'..'_','_x_']' not
R1089:1089 E_tactics <> m var
R1044:1046 Coq.Init.Datatypes <> nat ind
R1063:1066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1070:1072 Coq.Init.Logic <> :type_scope:x_'='_x not
R1067:1067 D_poly <> ::'['_x_','_'..'_','_x_']' not
R1069:1069 D_poly <> ::'['_x_','_'..'_','_x_']' not
R1068:1068 E_tactics <> q var
R1073:1073 D_poly <> ::'['_x_','_'..'_','_x_']' not
R1075:1075 D_poly <> ::'['_x_','_'..'_','_x_']' not
R1074:1074 E_tactics <> r var
R1055:1057 Coq.Init.Logic <> :type_scope:x_'='_x not
R1050:1050 D_poly <> ::'('_x_','_x_')' not
R1052:1052 D_poly <> ::'('_x_','_x_')' not
R1054:1054 D_poly <> ::'('_x_','_x_')' not
R1051:1051 E_tactics <> q var
R1053:1053 E_tactics <> q var
R1058:1058 D_poly <> ::'('_x_','_x_')' not
R1060:1060 D_poly <> ::'('_x_','_x_')' not
R1062:1062 D_poly <> ::'('_x_','_x_')' not
R1059:1059 E_tactics <> r var
R1061:1061 E_tactics <> r var
R1019:1021 Coq.Init.Logic <> :type_scope:x_'='_x not
R1014:1014 D_poly <> ::'('_x_','_x_')' not
R1016:1016 D_poly <> ::'('_x_','_x_')' not
R1018:1018 D_poly <> ::'('_x_','_x_')' not
R1015:1015 E_tactics <> n var
R1017:1017 E_tactics <> n var
R1022:1022 D_poly <> ::'('_x_','_x_')' not
R1024:1024 D_poly <> ::'('_x_','_x_')' not
R1026:1026 D_poly <> ::'('_x_','_x_')' not
R1023:1023 E_tactics <> m var
R1025:1025 E_tactics <> m var
def 1142:1145 <> oddb
R1150:1152 Coq.Init.Datatypes <> nat ind
R1155:1158 A_basic <> bool ind
R1171:1171 E_tactics <> n var
R1182:1182 Coq.Init.Datatypes <> O constr
R1187:1191 A_basic <> false constr
R1197:1197 Coq.Init.Datatypes <> S constr
R1199:1199 Coq.Init.Datatypes <> O constr
R1204:1207 A_basic <> true constr
R1213:1213 Coq.Init.Datatypes <> S constr
R1216:1216 Coq.Init.Datatypes <> S constr
R1225:1228 E_tactics <> oddb def
prf 1249:1256 <> silly_ex
R1262:1262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1308:1313 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1328:1331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1338:1340 Coq.Init.Logic <> :type_scope:x_'='_x not
R1332:1335 E_tactics <> oddb def
R1341:1344 A_basic <> true constr
R1321:1323 Coq.Init.Logic <> :type_scope:x_'='_x not
R1314:1318 A_basic <> evenb def
R1324:1327 A_basic <> true constr
R1287:1290 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1301:1303 Coq.Init.Logic <> :type_scope:x_'='_x not
R1291:1294 E_tactics <> oddb def
R1297:1297 Coq.Init.Datatypes <> S constr
R1299:1299 E_tactics <> n var
R1304:1307 A_basic <> true constr
R1280:1282 Coq.Init.Logic <> :type_scope:x_'='_x not
R1273:1277 A_basic <> evenb def
R1279:1279 E_tactics <> n var
R1283:1286 A_basic <> true constr
def 1726:1732 <> beq_nat
R1739:1741 Coq.Init.Datatypes <> nat ind
R1744:1747 A_basic <> bool ind
R1762:1762 E_tactics <> m var
R1760:1760 E_tactics <> n var
R1773:1773 Coq.Init.Datatypes <> O constr
R1775:1775 Coq.Init.Datatypes <> O constr
R1780:1783 A_basic <> true constr
R1789:1789 Coq.Init.Datatypes <> O constr
R1796:1800 A_basic <> false constr
R1808:1808 Coq.Init.Datatypes <> O constr
R1813:1817 A_basic <> false constr
R1822:1822 Coq.Init.Datatypes <> S constr
R1827:1827 Coq.Init.Datatypes <> S constr
R1835:1841 E_tactics <> beq_nat def
prf 1865:1870 <> silly3
R1885:1887 Coq.Init.Datatypes <> nat ind
R1908:1911 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1931:1933 Coq.Init.Logic <> :type_scope:x_'='_x not
R1912:1918 E_tactics <> beq_nat def
R1921:1921 Coq.Init.Datatypes <> S constr
R1924:1924 Coq.Init.Datatypes <> S constr
R1926:1926 E_tactics <> n var
R1934:1937 A_basic <> true constr
R1894:1896 Coq.Init.Logic <> :type_scope:x_'='_x not
R1890:1893 A_basic <> true constr
R1897:1903 E_tactics <> beq_nat def
R1905:1905 E_tactics <> n var
prf 2164:2170 <> silly3a
R2185:2187 Coq.Init.Datatypes <> nat ind
R2208:2211 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2231:2233 Coq.Init.Logic <> :type_scope:x_'='_x not
R2212:2218 E_tactics <> beq_nat def
R2221:2221 Coq.Init.Datatypes <> S constr
R2224:2224 Coq.Init.Datatypes <> S constr
R2226:2226 E_tactics <> n var
R2234:2237 A_basic <> true constr
R2194:2196 Coq.Init.Logic <> :type_scope:x_'='_x not
R2190:2193 A_basic <> true constr
R2197:2203 E_tactics <> beq_nat def
R2205:2205 E_tactics <> n var
prf 2298:2305 <> rev_exer
R2323:2326 D_poly <> list ind
R2328:2330 Coq.Init.Datatypes <> nat ind
R2343:2346 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2348:2350 Coq.Init.Logic <> :type_scope:x_'='_x not
R2347:2347 E_tactics <> m var
R2351:2353 D_poly <> rev def
R2355:2355 E_tactics <> n var
R2335:2337 Coq.Init.Logic <> :type_scope:x_'='_x not
R2334:2334 E_tactics <> n var
R2338:2340 D_poly <> rev def
R2342:2342 E_tactics <> m var
R2403:2416 D_poly <> rev_involutive thm
R2403:2416 D_poly <> rev_involutive thm
prf 3021:3028 <> trans_eq
R3057:3057 E_tactics <> X var
R3066:3069 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3075:3078 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3080:3082 Coq.Init.Logic <> :type_scope:x_'='_x not
R3079:3079 E_tactics <> n var
R3083:3083 E_tactics <> o var
R3071:3073 Coq.Init.Logic <> :type_scope:x_'='_x not
R3070:3070 E_tactics <> m var
R3074:3074 E_tactics <> o var
R3062:3064 Coq.Init.Logic <> :type_scope:x_'='_x not
R3061:3061 E_tactics <> n var
R3065:3065 E_tactics <> m var
def 3169:3184 <> trans_eq_example
R3209:3211 Coq.Init.Datatypes <> nat ind
R3228:3231 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3245:3248 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3254:3256 Coq.Init.Logic <> :type_scope:x_'='_x not
R3249:3249 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3251:3251 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3253:3253 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3252:3252 E_tactics <> b var
R3250:3250 E_tactics <> a var
R3257:3257 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3259:3259 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3261:3261 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3260:3260 E_tactics <> f var
R3258:3258 E_tactics <> e var
R3237:3239 Coq.Init.Logic <> :type_scope:x_'='_x not
R3232:3232 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3234:3234 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3236:3236 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3235:3235 E_tactics <> d var
R3233:3233 E_tactics <> c var
R3240:3240 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3242:3242 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3244:3244 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3243:3243 E_tactics <> f var
R3241:3241 E_tactics <> e var
R3220:3222 Coq.Init.Logic <> :type_scope:x_'='_x not
R3215:3215 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3217:3217 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3219:3219 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3218:3218 E_tactics <> b var
R3216:3216 E_tactics <> a var
R3223:3223 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3225:3225 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3227:3227 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3226:3226 E_tactics <> d var
R3224:3224 E_tactics <> c var
R3297:3297 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3299:3299 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3301:3301 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3283:3290 E_tactics <> trans_eq thm
R3297:3297 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3299:3299 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3301:3301 D_poly <> ::'['_x_','_'..'_','_x_']' not
R3283:3290 E_tactics <> trans_eq thm
def 3449:3465 <> trans_eq_exercise
R3486:3488 Coq.Init.Datatypes <> nat ind
R3508:3511 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3521:3524 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3525:3525 Coq.Init.Logic <> :type_scope:x_'='_x not
R3529:3533 Coq.Init.Logic <> :type_scope:x_'='_x not
R3544:3544 Coq.Init.Logic <> :type_scope:x_'='_x not
R3527:3527 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3526:3526 E_tactics <> n var
R3528:3528 E_tactics <> p var
R3534:3541 A_basic <> minustwo def
R3543:3543 E_tactics <> o var
R3512:3512 Coq.Init.Logic <> :type_scope:x_'='_x not
R3516:3519 Coq.Init.Logic <> :type_scope:x_'='_x not
R3514:3514 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3513:3513 E_tactics <> n var
R3515:3515 E_tactics <> p var
R3520:3520 E_tactics <> m var
R3493:3496 Coq.Init.Logic <> :type_scope:x_'='_x not
R3507:3507 Coq.Init.Logic <> :type_scope:x_'='_x not
R3492:3492 E_tactics <> m var
R3497:3504 A_basic <> minustwo def
R3506:3506 E_tactics <> o var
R3566:3573 E_tactics <> trans_eq thm
R3566:3573 E_tactics <> trans_eq thm
prf 4500:4510 <> S_injective
R4528:4530 Coq.Init.Datatypes <> nat ind
R4543:4546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4548:4550 Coq.Init.Logic <> :type_scope:x_'='_x not
R4547:4547 E_tactics <> n var
R4551:4551 E_tactics <> m var
R4537:4539 Coq.Init.Logic <> :type_scope:x_'='_x not
R4534:4534 Coq.Init.Datatypes <> S constr
R4536:4536 E_tactics <> n var
R4540:4540 Coq.Init.Datatypes <> S constr
R4542:4542 E_tactics <> m var
prf 4610:4622 <> inversion_ex1
R4642:4644 Coq.Init.Datatypes <> nat ind
R4661:4664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4668:4670 Coq.Init.Logic <> :type_scope:x_'='_x not
R4665:4665 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4667:4667 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4666:4666 E_tactics <> n var
R4671:4671 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4673:4673 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4672:4672 E_tactics <> m var
R4653:4655 Coq.Init.Logic <> :type_scope:x_'='_x not
R4648:4648 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4650:4650 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4652:4652 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4651:4651 E_tactics <> m var
R4649:4649 E_tactics <> n var
R4656:4656 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4658:4658 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4660:4660 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4659:4659 E_tactics <> o var
R4657:4657 E_tactics <> o var
prf 4827:4839 <> inversion_ex2
R4857:4859 Coq.Init.Datatypes <> nat ind
R4872:4875 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4877:4879 Coq.Init.Logic <> :type_scope:x_'='_x not
R4876:4876 E_tactics <> n var
R4880:4880 E_tactics <> m var
R4866:4868 Coq.Init.Logic <> :type_scope:x_'='_x not
R4863:4863 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4865:4865 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4864:4864 E_tactics <> n var
R4869:4869 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4871:4871 D_poly <> ::'['_x_','_'..'_','_x_']' not
R4870:4870 E_tactics <> m var
prf 4945:4957 <> inversion_ex3
R4986:4986 E_tactics <> X var
R4994:4997 D_poly <> list ind
R4999:4999 E_tactics <> X var
R5014:5017 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5027:5030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5032:5034 Coq.Init.Logic <> :type_scope:x_'='_x not
R5031:5031 E_tactics <> x var
R5035:5035 E_tactics <> y var
R5021:5023 Coq.Init.Logic <> :type_scope:x_'='_x not
R5019:5019 D_poly <> ::x_':'_x not
R5018:5018 E_tactics <> y var
R5020:5020 E_tactics <> l var
R5025:5025 D_poly <> ::x_':'_x not
R5024:5024 E_tactics <> x var
R5026:5026 E_tactics <> j var
R5008:5010 Coq.Init.Logic <> :type_scope:x_'='_x not
R5004:5004 D_poly <> ::x_':'_x not
R5003:5003 E_tactics <> x var
R5006:5006 D_poly <> ::x_':'_x not
R5005:5005 E_tactics <> y var
R5007:5007 E_tactics <> l var
R5012:5012 D_poly <> ::x_':'_x not
R5011:5011 E_tactics <> z var
R5013:5013 E_tactics <> j var
prf 5254:5266 <> inversion_ex4
R5284:5287 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5293:5295 Coq.Init.Logic <> :type_scope:x_'='_x not
R5289:5291 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5276:5278 Coq.Init.Logic <> :type_scope:x_'='_x not
R5272:5275 A_basic <> true constr
R5279:5283 A_basic <> false constr
prf 5363:5375 <> inversion_ex5
R5390:5392 Coq.Init.Datatypes <> nat ind
R5402:5405 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5411:5413 Coq.Init.Logic <> :type_scope:x_'='_x not
R5407:5409 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5398:5400 Coq.Init.Logic <> :type_scope:x_'='_x not
R5395:5395 Coq.Init.Datatypes <> S constr
R5397:5397 E_tactics <> n var
R5401:5401 Coq.Init.Datatypes <> O constr
def 5486:5498 <> inversion_ex6
R5526:5526 E_tactics <> X var
R5534:5537 D_poly <> list ind
R5539:5539 E_tactics <> X var
R5553:5556 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5566:5569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5571:5571 Coq.Init.Logic <> :type_scope:x_'='_x not
R5570:5570 E_tactics <> x var
R5572:5572 E_tactics <> z var
R5560:5562 Coq.Init.Logic <> :type_scope:x_'='_x not
R5558:5558 D_poly <> ::x_':'_x not
R5557:5557 E_tactics <> y var
R5559:5559 E_tactics <> l var
R5564:5564 D_poly <> ::x_':'_x not
R5563:5563 E_tactics <> z var
R5565:5565 E_tactics <> j var
R5548:5550 Coq.Init.Logic <> :type_scope:x_'='_x not
R5544:5544 D_poly <> ::x_':'_x not
R5543:5543 E_tactics <> x var
R5546:5546 D_poly <> ::x_':'_x not
R5545:5545 E_tactics <> y var
R5547:5547 E_tactics <> l var
R5551:5552 D_poly <> ::'['_']' not
prf 6702:6706 <> S_inj
R6725:6727 Coq.Init.Datatypes <> nat ind
R6734:6737 A_basic <> bool ind
R6764:6767 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6779:6781 Coq.Init.Logic <> :type_scope:x_'='_x not
R6768:6774 E_tactics <> beq_nat def
R6778:6778 E_tactics <> m var
R6776:6776 E_tactics <> n var
R6782:6782 E_tactics <> b var
R6760:6762 Coq.Init.Logic <> :type_scope:x_'='_x not
R6741:6747 E_tactics <> beq_nat def
R6756:6756 Coq.Init.Datatypes <> S constr
R6758:6758 E_tactics <> m var
R6750:6750 Coq.Init.Datatypes <> S constr
R6752:6752 E_tactics <> n var
R6763:6763 E_tactics <> b var
prf 6835:6843 <> silly_ex1
R6859:6861 Coq.Init.Datatypes <> nat ind
R6864:6864 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6913:6917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6936:6939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6944:6946 Coq.Init.Logic <> :type_scope:x_'='_x not
R6940:6943 A_basic <> true constr
R6947:6953 E_tactics <> beq_nat def
R6956:6956 Coq.Init.Datatypes <> S constr
R6959:6959 Coq.Init.Datatypes <> S constr
R6961:6961 E_tactics <> n var
R6922:6924 Coq.Init.Logic <> :type_scope:x_'='_x not
R6918:6921 A_basic <> true constr
R6925:6931 E_tactics <> beq_nat def
R6933:6933 E_tactics <> n var
R6883:6886 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6906:6908 Coq.Init.Logic <> :type_scope:x_'='_x not
R6887:6893 E_tactics <> beq_nat def
R6896:6896 Coq.Init.Datatypes <> S constr
R6899:6899 Coq.Init.Datatypes <> S constr
R6901:6901 E_tactics <> n var
R6909:6912 A_basic <> true constr
R6876:6878 Coq.Init.Logic <> :type_scope:x_'='_x not
R6865:6871 E_tactics <> beq_nat def
R6873:6873 E_tactics <> n var
R6879:6882 A_basic <> true constr
prf 7976:7993 <> plus_n_n_injective
R8012:8014 Coq.Init.Datatypes <> nat ind
R8027:8030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8032:8034 Coq.Init.Logic <> :type_scope:x_'='_x not
R8031:8031 E_tactics <> n var
R8035:8035 E_tactics <> m var
R8021:8023 Coq.Init.Logic <> :type_scope:x_'='_x not
R8019:8019 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8018:8018 E_tactics <> n var
R8020:8020 E_tactics <> n var
R8025:8025 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8024:8024 E_tactics <> m var
R8026:8026 E_tactics <> m var
R8234:8240 Coq.Init.Logic <> f_equal thm
R8234:8240 Coq.Init.Logic <> f_equal thm
R8260:8268 B_induction <> plus_n_Sm thm
R8260:8268 B_induction <> plus_n_Sm thm
R8260:8268 B_induction <> plus_n_Sm thm
R8313:8321 B_induction <> plus_n_Sm thm
R8313:8321 B_induction <> plus_n_Sm thm
R8313:8321 B_induction <> plus_n_Sm thm
prf 8406:8421 <> double_injective
R8440:8442 Coq.Init.Datatypes <> nat ind
R8465:8468 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8470:8472 Coq.Init.Logic <> :type_scope:x_'='_x not
R8469:8469 E_tactics <> n var
R8473:8473 E_tactics <> m var
R8454:8456 Coq.Init.Logic <> :type_scope:x_'='_x not
R8446:8451 B_induction <> double def
R8453:8453 E_tactics <> n var
R8457:8462 B_induction <> double def
R8464:8464 E_tactics <> m var
R8713:8719 Coq.Init.Logic <> f_equal thm
R8713:8719 Coq.Init.Logic <> f_equal thm
prf 8817:8828 <> beq_nat_true
R8845:8847 Coq.Init.Datatypes <> nat ind
R8869:8872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8874:8876 Coq.Init.Logic <> :type_scope:x_'='_x not
R8873:8873 E_tactics <> n var
R8877:8877 E_tactics <> m var
R8862:8864 Coq.Init.Logic <> :type_scope:x_'='_x not
R8851:8857 E_tactics <> beq_nat def
R8861:8861 E_tactics <> m var
R8859:8859 E_tactics <> n var
R8865:8868 A_basic <> true constr
R9123:9129 Coq.Init.Logic <> f_equal thm
R9123:9129 Coq.Init.Logic <> f_equal thm
prf 9191:9207 <> double_injective2
R9226:9228 Coq.Init.Datatypes <> nat ind
R9251:9254 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9256:9258 Coq.Init.Logic <> :type_scope:x_'='_x not
R9255:9255 E_tactics <> n var
R9259:9259 E_tactics <> m var
R9240:9242 Coq.Init.Logic <> :type_scope:x_'='_x not
R9232:9237 B_induction <> double def
R9239:9239 E_tactics <> n var
R9243:9248 B_induction <> double def
R9250:9250 E_tactics <> m var
R9585:9591 Coq.Init.Logic <> f_equal thm
R9585:9591 Coq.Init.Logic <> f_equal thm
prf 9626:9636 <> beq_id_true
R9672:9675 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9677:9679 Coq.Init.Logic <> :type_scope:x_'='_x not
R9676:9676 E_tactics <> x var
R9680:9680 E_tactics <> y var
R9665:9667 Coq.Init.Logic <> :type_scope:x_'='_x not
R9655:9660 C_lists <> beq_id def
R9664:9664 E_tactics <> y var
R9662:9662 E_tactics <> x var
R9668:9671 A_basic <> true constr
R9759:9770 E_tactics <> beq_nat_true thm
R9759:9770 E_tactics <> beq_nat_true thm
R9787:9793 Coq.Init.Logic <> f_equal thm
R9787:9793 Coq.Init.Logic <> f_equal thm
prf 9844:9863 <> nth_error_after_last
R9878:9880 Coq.Init.Datatypes <> nat ind
R9895:9898 D_poly <> list ind
R9900:9900 E_tactics <> X var
R9916:9919 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9933:9935 Coq.Init.Logic <> :type_scope:x_'='_x not
R9920:9928 D_poly <> nth_error def
R9932:9932 E_tactics <> n var
R9930:9930 E_tactics <> l var
R9936:9939 D_poly <> none constr
R9912:9914 Coq.Init.Logic <> :type_scope:x_'='_x not
R9904:9909 D_poly <> length def
R9911:9911 E_tactics <> l var
R9915:9915 E_tactics <> n var
prf 10249:10263 <> app_length_cons
R10293:10296 D_poly <> list ind
R10298:10298 E_tactics <> X var
R10304:10304 E_tactics <> X var
R10310:10312 Coq.Init.Datatypes <> nat ind
R10341:10344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10366:10368 Coq.Init.Logic <> :type_scope:x_'='_x not
R10345:10345 Coq.Init.Datatypes <> S constr
R10348:10353 D_poly <> length def
R10358:10361 D_poly <> ::x_'++'_x not
R10356:10357 E_tactics <> l1 var
R10362:10363 E_tactics <> l2 var
R10369:10369 E_tactics <> n var
R10337:10339 Coq.Init.Logic <> :type_scope:x_'='_x not
R10316:10321 D_poly <> length def
R10326:10330 D_poly <> ::x_'++'_x not
R10335:10335 D_poly <> ::x_'++'_x not
R10324:10325 E_tactics <> l1 var
R10332:10332 D_poly <> ::x_':'_x not
R10331:10331 E_tactics <> x var
R10333:10334 E_tactics <> l2 var
R10340:10340 E_tactics <> n var
R10625:10631 Coq.Init.Logic <> f_equal thm
R10625:10631 Coq.Init.Logic <> f_equal thm
prf 10665:10680 <> app_length_twice
R10706:10708 Coq.Init.Datatypes <> nat ind
R10714:10717 D_poly <> list ind
R10719:10719 E_tactics <> X var
R10735:10738 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10754:10756 Coq.Init.Logic <> :type_scope:x_'='_x not
R10739:10744 D_poly <> length def
R10748:10751 D_poly <> ::x_'++'_x not
R10747:10747 E_tactics <> l var
R10752:10752 E_tactics <> l var
R10758:10760 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10757:10757 E_tactics <> n var
R10761:10761 E_tactics <> n var
R10731:10733 Coq.Init.Logic <> :type_scope:x_'='_x not
R10723:10728 D_poly <> length def
R10730:10730 E_tactics <> l var
R10734:10734 E_tactics <> n var
R11015:11021 Coq.Init.Logic <> f_equal thm
R11015:11021 Coq.Init.Logic <> f_equal thm
R11058:11067 D_poly <> app_length thm
R11058:11067 D_poly <> app_length thm
R11058:11067 D_poly <> app_length thm
prf 11130:11145 <> double_induction
R11165:11168 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11172:11175 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11169:11171 Coq.Init.Datatypes <> nat ind
R11162:11164 Coq.Init.Datatypes <> nat ind
R11188:11191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11192:11192 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11227:11235 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11236:11236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11269:11273 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11274:11274 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11315:11319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11332:11334 Coq.Init.Datatypes <> nat ind
R11338:11338 E_tactics <> P var
R11342:11342 E_tactics <> n var
R11340:11340 E_tactics <> m var
R11287:11289 Coq.Init.Datatypes <> nat ind
R11298:11301 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11302:11302 E_tactics <> P var
R11311:11311 Coq.Init.Datatypes <> S constr
R11313:11313 E_tactics <> n var
R11305:11305 Coq.Init.Datatypes <> S constr
R11307:11307 E_tactics <> m var
R11293:11293 E_tactics <> P var
R11297:11297 E_tactics <> n var
R11295:11295 E_tactics <> m var
R11246:11248 Coq.Init.Datatypes <> nat ind
R11256:11259 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11260:11260 E_tactics <> P var
R11265:11265 Coq.Init.Datatypes <> S constr
R11267:11267 E_tactics <> n var
R11262:11262 Coq.Init.Datatypes <> O constr
R11251:11251 E_tactics <> P var
R11255:11255 E_tactics <> n var
R11253:11253 Coq.Init.Datatypes <> O constr
R11203:11205 Coq.Init.Datatypes <> nat ind
R11214:11217 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11218:11218 E_tactics <> P var
R11226:11226 Coq.Init.Datatypes <> O constr
R11221:11221 Coq.Init.Datatypes <> S constr
R11223:11223 E_tactics <> m var
R11209:11209 E_tactics <> P var
R11213:11213 Coq.Init.Datatypes <> O constr
R11211:11211 E_tactics <> m var
R11183:11183 E_tactics <> P var
R11187:11187 Coq.Init.Datatypes <> O constr
R11185:11185 Coq.Init.Datatypes <> O constr
prf 12055:12064 <> mult_assoc
R12083:12085 Coq.Init.Datatypes <> nat ind
R12096:12098 Coq.Init.Logic <> :type_scope:x_'='_x not
R12090:12091 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12095:12095 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12089:12089 E_tactics <> n var
R12093:12093 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12092:12092 E_tactics <> m var
R12094:12094 E_tactics <> p var
R12099:12099 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12103:12104 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12101:12101 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12100:12100 E_tactics <> n var
R12102:12102 E_tactics <> m var
R12105:12105 E_tactics <> p var
def 12135:12140 <> square
R12144:12146 Coq.Init.Datatypes <> nat ind
R12152:12152 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12151:12151 E_tactics <> m var
R12153:12153 E_tactics <> m var
prf 12163:12173 <> square_mult
R12192:12194 Coq.Init.Datatypes <> nat ind
R12210:12212 Coq.Init.Logic <> :type_scope:x_'='_x not
R12198:12203 E_tactics <> square def
R12207:12207 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12206:12206 E_tactics <> n var
R12208:12208 E_tactics <> m var
R12221:12223 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12213:12218 E_tactics <> square def
R12220:12220 E_tactics <> n var
R12224:12229 E_tactics <> square def
R12231:12231 E_tactics <> m var
R12331:12336 E_tactics <> square def
R12349:12358 E_tactics <> mult_assoc prfax
R12349:12358 E_tactics <> mult_assoc prfax
R12349:12358 E_tactics <> mult_assoc prfax
R12378:12380 Coq.Init.Logic <> :type_scope:x_'='_x not
R12376:12376 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12374:12374 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12384:12384 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12382:12382 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12378:12380 Coq.Init.Logic <> :type_scope:x_'='_x not
R12376:12376 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12374:12374 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12384:12384 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12382:12382 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R12402:12410 B_induction <> mult_comm thm
R12402:12410 B_induction <> mult_comm thm
R12402:12410 B_induction <> mult_comm thm
R12421:12430 E_tactics <> mult_assoc prfax
R12421:12430 E_tactics <> mult_assoc prfax
R12421:12430 E_tactics <> mult_assoc prfax
R12471:12480 E_tactics <> mult_assoc prfax
R12471:12480 E_tactics <> mult_assoc prfax
R12471:12480 E_tactics <> mult_assoc prfax
def 12515:12517 <> bar
R12521:12523 Coq.Init.Datatypes <> nat ind
R12536:12536 E_tactics <> x var
R12547:12547 Coq.Init.Datatypes <> O constr
R12558:12558 Coq.Init.Datatypes <> S constr
def 12583:12591 <> silly_bar
R12606:12608 Coq.Init.Datatypes <> nat ind
R12620:12622 Coq.Init.Logic <> :type_scope:x_'='_x not
R12616:12618 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12611:12613 E_tactics <> bar def
R12615:12615 E_tactics <> m var
R12634:12636 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12623:12625 E_tactics <> bar def
R12629:12631 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12628:12628 E_tactics <> m var
R12650:12652 E_tactics <> bar def
def 13181:13188 <> sillyfun
R13195:13197 Coq.Init.Datatypes <> nat ind
R13202:13205 A_basic <> bool ind
R13216:13222 E_tactics <> beq_nat def
R13224:13224 E_tactics <> n var
R13250:13256 E_tactics <> beq_nat def
R13258:13258 E_tactics <> n var
R13281:13285 A_basic <> false constr
R13267:13271 A_basic <> false constr
R13233:13237 A_basic <> false constr
prf 13297:13310 <> sillyfun_false
R13326:13328 Coq.Init.Datatypes <> nat ind
R13341:13343 Coq.Init.Logic <> :type_scope:x_'='_x not
R13331:13338 E_tactics <> sillyfun def
R13340:13340 E_tactics <> n var
R13344:13348 A_basic <> false constr
R13371:13378 E_tactics <> sillyfun def
R13393:13399 E_tactics <> beq_nat def
R13393:13399 E_tactics <> beq_nat def
R13492:13498 E_tactics <> beq_nat def
R13492:13498 E_tactics <> beq_nat def
def 13888:13896 <> sillyfun1
R13903:13905 Coq.Init.Datatypes <> nat ind
R13910:13913 A_basic <> bool ind
R13924:13930 E_tactics <> beq_nat def
R13932:13932 E_tactics <> n var
R13957:13963 E_tactics <> beq_nat def
R13965:13965 E_tactics <> n var
R13987:13991 A_basic <> false constr
R13974:13977 A_basic <> true constr
R13941:13944 A_basic <> true constr
prf 14003:14020 <> sillyfun1_odd_fail
R14036:14038 Coq.Init.Datatypes <> nat ind
R14059:14062 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14069:14071 Coq.Init.Logic <> :type_scope:x_'='_x not
R14063:14066 E_tactics <> oddb def
R14068:14068 E_tactics <> n var
R14072:14075 A_basic <> true constr
R14052:14054 Coq.Init.Logic <> :type_scope:x_'='_x not
R14041:14049 E_tactics <> sillyfun1 def
R14051:14051 E_tactics <> n var
R14055:14058 A_basic <> true constr
R14098:14106 E_tactics <> sillyfun1 def
R14126:14132 E_tactics <> beq_nat def
R14126:14132 E_tactics <> beq_nat def
R14232:14243 E_tactics <> beq_nat_true thm
R14232:14243 E_tactics <> beq_nat_true thm
R14311:14317 E_tactics <> beq_nat def
R14311:14317 E_tactics <> beq_nat def
R14358:14369 E_tactics <> beq_nat_true thm
R14358:14369 E_tactics <> beq_nat_true thm
prf 14475:14496 <> bool_fn_applied_thrice
R14516:14519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14520:14523 A_basic <> bool ind
R14512:14515 A_basic <> bool ind
R14529:14532 A_basic <> bool ind
R14547:14549 Coq.Init.Logic <> :type_scope:x_'='_x not
R14536:14536 E_tactics <> f var
R14539:14539 E_tactics <> f var
R14542:14542 E_tactics <> f var
R14544:14544 E_tactics <> b var
R14550:14550 E_tactics <> f var
R14552:14552 E_tactics <> b var
R14597:14600 A_basic <> true constr
R14597:14600 A_basic <> true constr
R14656:14660 A_basic <> false constr
R14656:14660 A_basic <> false constr
R14725:14729 A_basic <> false constr
R14725:14729 A_basic <> false constr
R14758:14761 A_basic <> true constr
R14758:14761 A_basic <> true constr
prf 14887:14897 <> beq_nat_sym
R14916:14918 Coq.Init.Datatypes <> nat ind
R14933:14935 Coq.Init.Logic <> :type_scope:x_'='_x not
R14922:14928 E_tactics <> beq_nat def
R14932:14932 E_tactics <> m var
R14930:14930 E_tactics <> n var
R14936:14942 E_tactics <> beq_nat def
R14946:14946 E_tactics <> n var
R14944:14944 E_tactics <> m var
prf 15176:15188 <> beq_nat_trans
R15209:15211 Coq.Init.Datatypes <> nat ind
R15233:15236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15255:15258 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15270:15272 Coq.Init.Logic <> :type_scope:x_'='_x not
R15259:15265 E_tactics <> beq_nat def
R15269:15269 E_tactics <> p var
R15267:15267 E_tactics <> n var
R15273:15276 A_basic <> true constr
R15248:15250 Coq.Init.Logic <> :type_scope:x_'='_x not
R15237:15243 E_tactics <> beq_nat def
R15247:15247 E_tactics <> p var
R15245:15245 E_tactics <> m var
R15251:15254 A_basic <> true constr
R15226:15228 Coq.Init.Logic <> :type_scope:x_'='_x not
R15215:15221 E_tactics <> beq_nat def
R15225:15225 E_tactics <> m var
R15223:15223 E_tactics <> n var
R15229:15232 A_basic <> true constr
R15298:15309 E_tactics <> beq_nat_true thm
R15298:15309 E_tactics <> beq_nat_true thm
R15325:15336 E_tactics <> beq_nat_true thm
R15325:15336 E_tactics <> beq_nat_true thm
R15405:15407 Coq.Init.Logic <> :type_scope:x_'='_x not
R15394:15400 E_tactics <> beq_nat def
R15404:15404 E_tactics <> p var
R15402:15402 E_tactics <> p var
R15408:15411 A_basic <> true constr
R15405:15407 Coq.Init.Logic <> :type_scope:x_'='_x not
R15394:15400 E_tactics <> beq_nat def
R15404:15404 E_tactics <> p var
R15402:15402 E_tactics <> p var
R15408:15411 A_basic <> true constr
prf 15517:15531 <> filter_exercise
R15564:15567 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15568:15571 A_basic <> bool ind
R15563:15563 E_tactics <> X var
R15577:15577 E_tactics <> X var
R15586:15589 D_poly <> list ind
R15591:15591 E_tactics <> X var
R15615:15618 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15625:15627 Coq.Init.Logic <> :type_scope:x_'='_x not
R15619:15622 E_tactics <> test var
R15624:15624 E_tactics <> x var
R15628:15631 A_basic <> true constr
R15608:15610 Coq.Init.Logic <> :type_scope:x_'='_x not
R15595:15600 D_poly <> filter def
R15607:15607 E_tactics <> l var
R15602:15605 E_tactics <> test var
R15612:15612 D_poly <> ::x_':'_x not
R15611:15611 E_tactics <> x var
R15613:15614 E_tactics <> lf var
R15657:15662 D_poly <> filter def
R15657:15662 D_poly <> filter def
def 15948:15954 <> forallb
R15969:15972 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15973:15976 A_basic <> bool ind
R15968:15968 E_tactics <> X var
R15982:15985 D_poly <> list ind
R15987:15987 E_tactics <> X var
R15990:15993 A_basic <> bool ind
R16006:16006 E_tactics <> l var
R16017:16018 D_poly <> ::'['_']' not
R16023:16026 A_basic <> true constr
R16033:16033 D_poly <> ::x_':'_x not
R16040:16043 A_basic <> andb def
R16052:16058 E_tactics <> forallb def
R16060:16060 E_tactics <> f var
R16046:16046 E_tactics <> f var
def 16083:16088 <> existb
R16103:16106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16107:16110 A_basic <> bool ind
R16102:16102 E_tactics <> X var
R16116:16119 D_poly <> list ind
R16121:16121 E_tactics <> X var
R16125:16128 A_basic <> bool ind
R16141:16141 E_tactics <> l var
R16152:16153 D_poly <> ::'['_']' not
R16158:16162 A_basic <> false constr
R16169:16169 D_poly <> ::x_':'_x not
R16176:16178 A_basic <> orb def
R16187:16192 E_tactics <> existb def
R16194:16194 E_tactics <> f var
R16181:16181 E_tactics <> f var
def 16219:16225 <> existb'
R16240:16241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16242:16245 A_basic <> bool ind
R16239:16239 E_tactics <> X var
R16251:16254 D_poly <> list ind
R16256:16256 E_tactics <> X var
R16259:16262 A_basic <> bool ind
R16269:16272 A_basic <> negb def
R16275:16281 E_tactics <> forallb def
R16305:16305 E_tactics <> l var
R16293:16296 A_basic <> negb def
R16299:16299 E_tactics <> f var
R16301:16301 E_tactics <> x var
prf 16319:16332 <> existb_exidtb'
R16359:16362 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16363:16366 A_basic <> bool ind
R16358:16358 E_tactics <> X var
R16372:16375 D_poly <> list ind
R16377:16377 E_tactics <> X var
R16391:16393 Coq.Init.Logic <> :type_scope:x_'='_x not
R16381:16386 E_tactics <> existb def
R16390:16390 E_tactics <> l var
R16388:16388 E_tactics <> f var
R16394:16400 E_tactics <> existb' def
R16404:16404 E_tactics <> l var
R16402:16402 E_tactics <> f var
R16477:16483 E_tactics <> existb' def
R16587:16593 E_tactics <> existb' def
