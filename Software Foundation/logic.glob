DIGEST a4f8972bee26eb6d0b6cbc273fb7c84a
Flogic
R222:225 poly <> <> lib
R243:247 lists <> <> lib
R265:271 tactics <> <> lib
def 600:611 <> and_exercise
R628:630 Coq.Init.Datatypes <> nat ind
R643:646 Coq.Init.Logic <> :type_scope:x_'->'_x not
R652:655 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R648:650 Coq.Init.Logic <> :type_scope:x_'='_x not
R647:647 logic <> n var
R657:659 Coq.Init.Logic <> :type_scope:x_'='_x not
R656:656 logic <> m var
R639:641 Coq.Init.Logic <> :type_scope:x_'='_x not
R635:637 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R634:634 logic <> n var
R638:638 logic <> m var
R797:805 induction <> plus_n_Sm thm
R797:805 induction <> plus_n_Sm thm
R797:805 induction <> plus_n_Sm thm
prf 846:858 <> and_exercise2
R876:878 Coq.Init.Datatypes <> nat ind
R894:897 Coq.Init.Logic <> :type_scope:x_'->'_x not
R903:905 Coq.Init.Logic <> :type_scope:x_'='_x not
R899:901 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R898:898 logic <> n var
R902:902 logic <> m var
R887:888 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R883:885 Coq.Init.Logic <> :type_scope:x_'='_x not
R882:882 logic <> n var
R890:892 Coq.Init.Logic <> :type_scope:x_'='_x not
R889:889 logic <> m var
prf 1007:1016 <> and_commut
R1047:1050 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1052:1055 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1051:1051 logic <> Q var
R1056:1056 logic <> P var
R1042:1045 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1041:1041 logic <> P var
R1046:1046 logic <> Q var
prf 1148:1156 <> and_assoc
R1196:1199 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1200:1200 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1207:1211 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1202:1205 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1201:1201 logic <> P var
R1206:1206 logic <> Q var
R1212:1212 logic <> R var
R1184:1188 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1195:1195 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1183:1183 logic <> P var
R1190:1193 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1189:1189 logic <> Q var
R1194:1194 logic <> R var
prf 1770:1779 <> or_example
R1797:1799 Coq.Init.Datatypes <> nat ind
R1817:1820 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1824:1826 Coq.Init.Logic <> :type_scope:x_'='_x not
R1822:1822 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R1821:1821 logic <> n var
R1823:1823 logic <> m var
R1808:1811 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R1804:1806 Coq.Init.Logic <> :type_scope:x_'='_x not
R1803:1803 logic <> n var
R1813:1815 Coq.Init.Logic <> :type_scope:x_'='_x not
R1812:1812 logic <> m var
R1947:1954 Coq.Init.Peano <> mult_n_O thm
R1947:1954 Coq.Init.Peano <> mult_n_O thm
R1947:1954 Coq.Init.Peano <> mult_n_O thm
prf 1982:1989 <> or_intro
R2015:2018 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2020:2023 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R2019:2019 logic <> A var
R2024:2024 logic <> B var
R2014:2014 logic <> A var
prf 2101:2112 <> zero_or_succ
R2127:2129 Coq.Init.Datatypes <> nat ind
R2137:2140 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R2133:2135 Coq.Init.Logic <> :type_scope:x_'='_x not
R2132:2132 logic <> n var
R2142:2144 Coq.Init.Logic <> :type_scope:x_'='_x not
R2141:2141 logic <> n var
R2145:2145 Coq.Init.Datatypes <> S constr
R2148:2151 Coq.Init.Peano <> pred syndef
R2153:2153 logic <> n var
prf 2326:2334 <> mult_eq_O
R2352:2354 Coq.Init.Datatypes <> nat ind
R2367:2370 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2376:2379 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R2372:2374 Coq.Init.Logic <> :type_scope:x_'='_x not
R2371:2371 logic <> n var
R2381:2383 Coq.Init.Logic <> :type_scope:x_'='_x not
R2380:2380 logic <> m var
R2363:2365 Coq.Init.Logic <> :type_scope:x_'='_x not
R2359:2361 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R2358:2358 logic <> n var
R2362:2362 logic <> m var
prf 2529:2537 <> or_commut
R2568:2571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2573:2576 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R2572:2572 logic <> Q var
R2577:2577 logic <> P var
R2563:2566 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R2562:2562 logic <> P var
R2567:2567 logic <> Q var
prf 3830:3847 <> ex_falso_quodlibet
R3876:3879 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3880:3880 logic <> P var
R3871:3875 Coq.Init.Logic <> False ind
prf 3922:3940 <> not_implies_our_not
R3962:3966 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3988:3988 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3983:3986 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3987:3987 logic <> Q var
R3982:3982 logic <> P var
R3960:3960 Coq.Init.Logic <> :type_scope:'~'_x not
R3961:3961 logic <> P var
prf 4057:4068 <> zero_not_one
R4075:4076 Coq.Init.Logic <> :type_scope:'~'_x not
R4082:4082 Coq.Init.Logic <> :type_scope:'~'_x not
R4078:4080 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 4136:4148 <> zero_not_one'
R4157:4160 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 4269:4277 <> not_False
R4284:4284 Coq.Init.Logic <> :type_scope:'~'_x not
R4285:4289 Coq.Init.Logic <> False ind
prf 4333:4362 <> contradiction_implies_anything
R4388:4388 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4396:4400 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4401:4401 logic <> Q var
R4390:4393 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4389:4389 logic <> P var
R4394:4394 Coq.Init.Logic <> :type_scope:'~'_x not
R4395:4395 logic <> P var
prf 4474:4483 <> double_neg
R4506:4509 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4510:4510 Coq.Init.Logic <> :type_scope:'~'_x not
R4511:4511 Coq.Init.Logic <> :type_scope:'~'_x not
R4512:4512 logic <> P var
R4505:4505 logic <> P var
prf 4591:4604 <> contrapositive
R4630:4630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4637:4642 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4651:4651 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4645:4648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4649:4649 Coq.Init.Logic <> :type_scope:'~'_x not
R4650:4650 logic <> P var
R4643:4643 Coq.Init.Logic <> :type_scope:'~'_x not
R4644:4644 logic <> Q var
R4632:4635 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4636:4636 logic <> Q var
R4631:4631 logic <> P var
prf 4749:4771 <> not_both_true_and_false
R4793:4794 Coq.Init.Logic <> :type_scope:'~'_x not
R4802:4802 Coq.Init.Logic <> :type_scope:'~'_x not
R4796:4799 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4795:4795 logic <> P var
R4800:4800 Coq.Init.Logic <> :type_scope:'~'_x not
R4801:4801 logic <> P var
prf 4894:4910 <> not_true_is_false
R4926:4929 basic <> bool ind
R4941:4944 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4946:4948 Coq.Init.Logic <> :type_scope:x_'='_x not
R4945:4945 logic <> b var
R4949:4953 basic <> false constr
R4933:4936 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4932:4932 logic <> b var
R4937:4940 basic <> true constr
R5000:5002 Coq.Init.Logic <> not def
R5021:5038 logic <> ex_falso_quodlibet thm
R5021:5038 logic <> ex_falso_quodlibet thm
prf 5181:5198 <> not_true_is_false'
R5214:5217 basic <> bool ind
R5229:5232 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5234:5236 Coq.Init.Logic <> :type_scope:x_'='_x not
R5233:5233 logic <> b var
R5237:5241 basic <> false constr
R5221:5224 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R5220:5220 logic <> b var
R5225:5228 basic <> true constr
R5288:5290 Coq.Init.Logic <> not def
prf 5457:5468 <> True_is_true
R5471:5474 Coq.Init.Logic <> True ind
R5494:5494 Coq.Init.Logic <> I constr
R5494:5494 Coq.Init.Logic <> I constr
mod 5977:5981 <> MyIff
def 5996:5998 MyIff iff
R6021:6021 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6028:6033 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6040:6040 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6023:6026 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6027:6027 logic <> Q var
R6022:6022 logic <> P var
R6035:6038 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6039:6039 logic <> P var
R6034:6034 logic <> Q var
R6069:6071 logic MyIff iff def
not 6053:6053 MyIff :type_scope:x_'<'_'-'_'>'_x
R6133:6137 logic MyIff <> mod
prf 6150:6156 <> iff_sym
R6182:6182 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6190:6195 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6203:6203 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6197:6201 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6196:6196 logic <> Q var
R6202:6202 logic <> P var
R6184:6188 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6183:6183 logic <> P var
R6189:6189 logic <> Q var
R6232:6234 Coq.Init.Logic <> iff def
prf 6306:6323 <> not_true_iff_false
R6339:6342 basic <> bool ind
R6354:6358 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6346:6349 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R6345:6345 logic <> b var
R6350:6353 basic <> true constr
R6360:6362 Coq.Init.Logic <> :type_scope:x_'='_x not
R6359:6359 logic <> b var
R6363:6367 basic <> false constr
R6396:6398 Coq.Init.Logic <> iff def
R6437:6439 Coq.Init.Logic <> not def
R6550:6552 Coq.Init.Logic <> not def
prf 6631:6638 <> iff_refl
R6661:6665 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6660:6660 logic <> P var
R6666:6666 logic <> P var
R6695:6697 Coq.Init.Logic <> iff def
prf 6771:6779 <> iff_trans
R6807:6807 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6815:6819 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6820:6820 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6828:6833 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6841:6841 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6835:6839 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6834:6834 logic <> P var
R6840:6840 logic <> R var
R6822:6826 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6821:6821 logic <> Q var
R6827:6827 logic <> R var
R6809:6813 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6808:6808 logic <> P var
R6814:6814 logic <> Q var
prf 7021:7043 <> or_distributes_over_and
R7084:7088 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R7072:7076 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7083:7083 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7071:7071 logic <> P var
R7078:7081 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7077:7077 logic <> Q var
R7082:7082 logic <> R var
R7089:7089 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7096:7101 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7108:7108 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7091:7094 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7090:7090 logic <> P var
R7095:7095 logic <> Q var
R7103:7106 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7102:7102 logic <> P var
R7107:7107 logic <> R var
R7787:7804 Coq.Setoids.Setoid <> <> lib
prf 7834:7839 <> mult_O
R7858:7860 Coq.Init.Datatypes <> nat ind
R7873:7877 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R7869:7871 Coq.Init.Logic <> :type_scope:x_'='_x not
R7865:7867 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R7864:7864 logic <> n var
R7868:7868 logic <> m var
R7883:7886 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7879:7881 Coq.Init.Logic <> :type_scope:x_'='_x not
R7878:7878 logic <> n var
R7888:7890 Coq.Init.Logic <> :type_scope:x_'='_x not
R7887:7887 logic <> m var
R7931:7939 logic <> mult_eq_O thm
R7931:7939 logic <> mult_eq_O thm
R7953:7962 logic <> or_example thm
R7953:7962 logic <> or_example thm
prf 7977:7984 <> or_assoc
R8025:8029 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8013:8017 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8024:8024 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8012:8012 logic <> P var
R8019:8022 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8018:8018 logic <> Q var
R8023:8023 logic <> R var
R8030:8030 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8037:8041 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8032:8035 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8031:8031 logic <> P var
R8036:8036 logic <> Q var
R8042:8042 logic <> R var
prf 8342:8349 <> mult_O_3
R8370:8372 Coq.Init.Datatypes <> nat ind
R8385:8389 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8381:8383 Coq.Init.Logic <> :type_scope:x_'='_x not
R8379:8379 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R8377:8377 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R8376:8376 logic <> n var
R8378:8378 logic <> m var
R8380:8380 logic <> p var
R8395:8398 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8391:8393 Coq.Init.Logic <> :type_scope:x_'='_x not
R8390:8390 logic <> n var
R8404:8407 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8400:8402 Coq.Init.Logic <> :type_scope:x_'='_x not
R8399:8399 logic <> m var
R8409:8411 Coq.Init.Logic <> :type_scope:x_'='_x not
R8408:8408 logic <> p var
R8442:8447 logic <> mult_O thm
R8442:8447 logic <> mult_O thm
R8442:8447 logic <> mult_O thm
R8458:8463 logic <> mult_O thm
R8458:8463 logic <> mult_O thm
R8458:8463 logic <> mult_O thm
R8520:8527 logic <> or_assoc thm
R8520:8527 logic <> or_assoc thm
R8520:8527 logic <> or_assoc thm
prf 8645:8661 <> apply_iff_example
R8680:8682 Coq.Init.Datatypes <> nat ind
R8693:8696 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8702:8705 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8698:8700 Coq.Init.Logic <> :type_scope:x_'='_x not
R8697:8697 logic <> n var
R8707:8709 Coq.Init.Logic <> :type_scope:x_'='_x not
R8706:8706 logic <> m var
R8689:8691 Coq.Init.Logic <> :type_scope:x_'='_x not
R8687:8687 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R8686:8686 logic <> n var
R8688:8688 logic <> m var
R8738:8743 logic <> mult_O thm
R8738:8743 logic <> mult_O thm
prf 9323:9334 <> four_is_even
R9341:9347 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9353:9354 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9350:9352 Coq.Init.Datatypes <> nat ind
R9356:9358 Coq.Init.Logic <> :type_scope:x_'='_x not
R9360:9362 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9359:9359 logic <> n var
R9363:9363 logic <> n var
prf 9432:9446 <> exists_example2
R9462:9464 Coq.Init.Datatypes <> nat ind
R9467:9467 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9491:9496 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9520:9520 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9497:9503 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9509:9510 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9506:9508 Coq.Init.Datatypes <> nat ind
R9512:9514 Coq.Init.Logic <> :type_scope:x_'='_x not
R9511:9511 logic <> n var
R9516:9518 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9519:9519 logic <> o var
R9468:9474 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9480:9481 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9477:9479 Coq.Init.Datatypes <> nat ind
R9483:9485 Coq.Init.Logic <> :type_scope:x_'='_x not
R9482:9482 logic <> n var
R9487:9489 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9490:9490 logic <> m var
prf 9646:9660 <> dist_not_exists
R9687:9688 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9686:9686 logic <> X var
R9696:9696 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9712:9716 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9717:9718 Coq.Init.Logic <> :type_scope:'~'_x not
R9737:9737 Coq.Init.Logic <> :type_scope:'~'_x not
R9719:9725 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9729:9730 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9728:9728 logic <> X var
R9731:9732 Coq.Init.Logic <> :type_scope:'~'_x not
R9736:9736 Coq.Init.Logic <> :type_scope:'~'_x not
R9733:9733 logic <> P var
R9735:9735 logic <> x var
R9706:9706 logic <> X var
R9709:9709 logic <> P var
R9711:9711 logic <> x var
R9766:9768 Coq.Init.Logic <> not def
prf 9837:9850 <> dist_exists_or
R9880:9883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9879:9879 logic <> X var
R9891:9891 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9914:9917 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9892:9898 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9902:9903 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9901:9901 logic <> X var
R9907:9910 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9904:9904 logic <> P var
R9906:9906 logic <> x var
R9911:9911 logic <> Q var
R9913:9913 logic <> x var
R9918:9918 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9934:9937 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9953:9953 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9919:9925 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9929:9930 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9928:9928 logic <> X var
R9931:9931 logic <> P var
R9933:9933 logic <> x var
R9938:9944 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9948:9949 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9947:9947 logic <> X var
R9950:9950 logic <> Q var
R9952:9952 logic <> x var
def 10489:10490 <> In
R10504:10504 logic <> X var
R10510:10513 poly <> list ind
R10515:10515 logic <> X var
R10529:10529 logic <> l var
R10540:10541 poly <> ::'['_']' not
R10546:10550 Coq.Init.Logic <> False ind
R10557:10557 poly <> ::x_':'_x not
R10563:10563 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10567:10571 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10565:10565 Coq.Init.Logic <> :type_scope:x_'='_x not
R10564:10564 logic <> x var
R10572:10573 logic <> In def
R10575:10575 logic <> x var
def 10596:10607 <> In_example_1
R10613:10614 logic <> In def
R10618:10618 poly <> ::'['_x_','_'..'_','_x_']' not
R10620:10620 poly <> ::'['_x_','_'..'_','_x_']' not
R10622:10622 poly <> ::'['_x_','_'..'_','_x_']' not
R10624:10624 poly <> ::'['_x_','_'..'_','_x_']' not
def 10685:10696 <> In_example_2
R10710:10712 Coq.Init.Datatypes <> nat ind
R10725:10728 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10729:10735 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10742:10743 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10739:10741 Coq.Init.Datatypes <> nat ind
R10745:10747 Coq.Init.Logic <> :type_scope:x_'='_x not
R10744:10744 logic <> n var
R10749:10749 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R10750:10751 logic <> n' var
R10715:10716 logic <> In def
R10720:10720 poly <> ::'['_x_','_'..'_','_x_']' not
R10722:10722 poly <> ::'['_x_','_'..'_','_x_']' not
R10724:10724 poly <> ::'['_x_','_'..'_','_x_']' not
R10718:10718 logic <> n var
R10780:10781 logic <> In def
prf 10933:10938 <> In_map
R10967:10970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10971:10971 logic <> B var
R10966:10966 logic <> A var
R10977:10980 poly <> list ind
R10982:10982 logic <> A var
R10988:10988 logic <> A var
R10998:11001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11002:11003 logic <> In def
R11012:11014 poly <> map def
R11018:11018 logic <> l var
R11016:11016 logic <> f var
R11006:11006 logic <> f var
R11008:11008 logic <> x var
R10992:10993 logic <> In def
R10997:10997 logic <> l var
R10995:10995 logic <> x var
def 11229:11238 <> In_map_iff
R11266:11267 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11268:11268 logic <> B var
R11265:11265 logic <> A var
R11274:11277 poly <> list ind
R11279:11279 logic <> A var
R11285:11285 logic <> B var
R11303:11307 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11289:11290 logic <> In def
R11295:11297 poly <> map def
R11301:11301 logic <> l var
R11299:11299 logic <> f var
R11292:11292 logic <> y var
R11308:11314 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11318:11319 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11317:11317 logic <> A var
R11327:11330 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11323:11325 Coq.Init.Logic <> :type_scope:x_'='_x not
R11320:11320 logic <> f var
R11322:11322 logic <> x var
R11326:11326 logic <> y var
R11331:11332 logic <> In def
R11336:11336 logic <> l var
R11334:11334 logic <> x var
prf 11935:11944 <> In_app_iff
R11973:11976 poly <> list ind
R11978:11978 logic <> A var
R11984:11984 logic <> A var
R12000:12004 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11988:11989 logic <> In def
R11995:11996 poly <> ::x_'++'_x not
R11994:11994 logic <> l var
R11997:11998 logic <> l' var
R11991:11991 logic <> a var
R12011:12014 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12005:12006 logic <> In def
R12010:12010 logic <> l var
R12008:12008 logic <> a var
R12015:12016 logic <> In def
R12020:12021 logic <> l' var
R12018:12018 logic <> a var
R12148:12155 logic <> or_assoc thm
R12148:12155 logic <> or_assoc thm
R12365:12372 logic <> or_assoc thm
R12365:12372 logic <> or_assoc thm
def 12469:12471 <> All
R12486:12489 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12485:12485 logic <> T var
R12499:12502 poly <> list ind
R12504:12504 logic <> T var
R12523:12523 logic <> l var
R12534:12535 poly <> ::'['_']' not
R12540:12543 Coq.Init.Logic <> True ind
R12550:12550 poly <> ::x_':'_x not
R12556:12556 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12560:12564 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12557:12557 logic <> P var
R12565:12567 logic <> All def
R12569:12569 logic <> P var
prf 12587:12592 <> All_In
R12619:12622 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12618:12618 logic <> T var
R12632:12635 poly <> list ind
R12637:12637 logic <> T var
R12641:12641 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12667:12672 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12651:12651 logic <> T var
R12660:12663 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12664:12664 logic <> P var
R12666:12666 logic <> x var
R12654:12655 logic <> In def
R12659:12659 logic <> l var
R12657:12657 logic <> x var
R12673:12675 logic <> All def
R12679:12679 logic <> l var
R12677:12677 logic <> P var
def 13102:13117 <> combine_odd_even
R13135:13138 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13132:13134 Coq.Init.Datatypes <> nat ind
R13149:13152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13146:13148 Coq.Init.Datatypes <> nat ind
R13176:13180 basic <> evenb def
R13182:13182 logic <> n var
R13202:13205 logic <> Podd var
R13207:13207 logic <> n var
R13189:13193 logic <> Peven var
R13195:13195 logic <> n var
prf 13221:13242 <> combine_odd_even_intro
R13272:13275 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13269:13271 Coq.Init.Datatypes <> nat ind
R13285:13287 Coq.Init.Datatypes <> nat ind
R13296:13296 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13322:13331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13332:13332 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13358:13367 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13397:13397 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13368:13383 logic <> combine_odd_even def
R13396:13396 logic <> n var
R13390:13394 logic <> Peven var
R13385:13388 logic <> Podd var
R13347:13350 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13351:13355 logic <> Peven var
R13357:13357 logic <> n var
R13340:13342 Coq.Init.Logic <> :type_scope:x_'='_x not
R13333:13337 basic <> evenb def
R13339:13339 logic <> n var
R13343:13346 basic <> true constr
R13312:13315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13316:13319 logic <> Podd var
R13321:13321 logic <> n var
R13304:13306 Coq.Init.Logic <> :type_scope:x_'='_x not
R13297:13301 basic <> evenb def
R13303:13303 logic <> n var
R13307:13311 basic <> false constr
R13426:13441 logic <> combine_odd_even def
R13456:13460 basic <> evenb def
R13456:13460 basic <> evenb def
ax 13619:13643 <> functional_extensionality
R13674:13677 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13678:13678 logic <> Y var
R13673:13673 logic <> X var
R13682:13682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13704:13708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13710:13712 Coq.Init.Logic <> :type_scope:x_'='_x not
R13709:13709 logic <> f var
R13713:13713 logic <> g var
R13692:13692 logic <> X var
R13698:13700 Coq.Init.Logic <> :type_scope:x_'='_x not
R13695:13695 logic <> f var
R13697:13697 logic <> x var
R13701:13701 logic <> g var
R13703:13703 logic <> x var
def 13727:13736 <> rev_append
R13754:13757 poly <> list ind
R13759:13759 logic <> X var
R13762:13765 poly <> list ind
R13767:13767 logic <> X var
R13780:13781 logic <> l1 var
R13792:13793 poly <> ::'['_']' not
R13798:13799 logic <> l2 var
R13806:13806 poly <> ::x_':'_x not
R13812:13821 logic <> rev_append def
R13827:13827 poly <> ::x_':'_x not
R13828:13829 logic <> l2 var
def 13851:13856 <> tr_rev
R13870:13873 poly <> list ind
R13875:13875 logic <> X var
R13878:13881 poly <> list ind
R13883:13883 logic <> X var
R13890:13899 logic <> rev_append def
R13903:13904 poly <> ::'['_']' not
R13901:13901 logic <> l var
prf 13915:13930 <> rev_append_lemma
R13958:13961 poly <> list ind
R13963:13963 logic <> X var
R13983:13985 Coq.Init.Logic <> :type_scope:x_'='_x not
R13967:13976 logic <> rev_append def
R13981:13982 logic <> l2 var
R13978:13979 logic <> l1 var
R14002:14005 poly <> ::x_'++'_x not
R13986:13995 logic <> rev_append def
R14000:14001 poly <> ::'['_']' not
R13997:13998 logic <> l1 var
R14006:14007 logic <> l2 var
R14159:14161 Coq.Init.Logic <> :type_scope:x_'='_x not
R14136:14145 logic <> rev_append def
R14153:14155 poly <> ::x_':'_x not
R14179:14183 poly <> ::x_'++'_x not
R14189:14189 poly <> ::x_'++'_x not
R14162:14171 logic <> rev_append def
R14176:14178 poly <> ::'['_']' not
R14186:14186 poly <> ::x_':'_x not
R14159:14161 Coq.Init.Logic <> :type_scope:x_'='_x not
R14136:14145 logic <> rev_append def
R14153:14155 poly <> ::x_':'_x not
R14179:14183 poly <> ::x_'++'_x not
R14189:14189 poly <> ::x_'++'_x not
R14162:14171 logic <> rev_append def
R14176:14178 poly <> ::'['_']' not
R14186:14186 poly <> ::x_':'_x not
R14256:14264 poly <> app_assoc thm
R14256:14264 poly <> app_assoc thm
R14256:14264 poly <> app_assoc thm
prf 14328:14341 <> tr_rev_correct
R14372:14374 Coq.Init.Logic <> :type_scope:x_'='_x not
R14364:14369 logic <> tr_rev def
R14371:14371 logic <> X var
R14376:14378 poly <> rev def
R14380:14380 logic <> X var
R14408:14432 logic <> functional_extensionality prfax
R14408:14432 logic <> functional_extensionality prfax
R14489:14494 logic <> tr_rev def
R14536:14541 logic <> tr_rev def
R14579:14584 logic <> tr_rev def
R14595:14610 logic <> rev_append_lemma thm
R14595:14610 logic <> rev_append_lemma thm
R14595:14610 logic <> rev_append_lemma thm
prf 14647:14658 <> evenb_double
R14674:14676 Coq.Init.Datatypes <> nat ind
R14695:14697 Coq.Init.Logic <> :type_scope:x_'='_x not
R14679:14683 basic <> evenb def
R14686:14691 induction <> double def
R14693:14693 logic <> k var
R14698:14701 basic <> true constr
def 14801:14804 <> notb
R14809:14812 basic <> bool ind
R14815:14818 basic <> bool ind
R14829:14829 logic <> b var
R14838:14841 basic <> true constr
R14846:14850 basic <> false constr
R14854:14858 basic <> false constr
R14863:14866 basic <> true constr
def 14883:14886 <> oddb
R14891:14893 Coq.Init.Datatypes <> nat ind
R14896:14899 basic <> bool ind
R14912:14912 logic <> n var
R14923:14923 Coq.Init.Datatypes <> O constr
R14928:14932 basic <> false constr
R14938:14938 Coq.Init.Datatypes <> S constr
R14940:14940 Coq.Init.Datatypes <> O constr
R14945:14948 basic <> true constr
R14954:14954 Coq.Init.Datatypes <> S constr
R14957:14957 Coq.Init.Datatypes <> S constr
R14966:14969 logic <> oddb def
prf 14990:15006 <> evenb_double_conv
R15022:15024 Coq.Init.Datatypes <> nat ind
R15028:15035 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15041:15043 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15038:15040 Coq.Init.Datatypes <> nat ind
R15045:15047 Coq.Init.Logic <> :type_scope:x_'='_x not
R15044:15044 logic <> n var
R15051:15055 basic <> evenb def
R15057:15057 logic <> n var
R15078:15078 Coq.Init.Datatypes <> S constr
R15081:15086 induction <> double def
R15088:15088 logic <> k var
R15064:15069 induction <> double def
R15071:15071 logic <> k var
prf 15112:15125 <> even_bool_prop
R15141:15143 Coq.Init.Datatypes <> nat ind
R15160:15164 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15153:15155 Coq.Init.Logic <> :type_scope:x_'='_x not
R15146:15150 basic <> evenb def
R15152:15152 logic <> n var
R15156:15159 basic <> true constr
R15165:15171 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15177:15178 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15174:15176 Coq.Init.Datatypes <> nat ind
R15180:15182 Coq.Init.Logic <> :type_scope:x_'='_x not
R15179:15179 logic <> n var
R15183:15188 induction <> double def
R15190:15190 logic <> k var
R15217:15219 Coq.Init.Logic <> iff def
R15252:15268 logic <> evenb_double_conv prfax
R15252:15268 logic <> evenb_double_conv prfax
R15378:15389 logic <> evenb_double thm
R15378:15389 logic <> evenb_double thm
prf 15421:15433 <> andb_true_iff
R15454:15457 basic <> bool ind
R15478:15482 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15471:15473 Coq.Init.Logic <> :type_scope:x_'='_x not
R15461:15464 basic <> andb def
R15469:15470 logic <> b2 var
R15466:15467 logic <> b1 var
R15474:15477 basic <> true constr
R15492:15495 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15485:15487 Coq.Init.Logic <> :type_scope:x_'='_x not
R15483:15484 logic <> b1 var
R15488:15491 basic <> true constr
R15498:15500 Coq.Init.Logic <> :type_scope:x_'='_x not
R15496:15497 logic <> b2 var
R15501:15504 basic <> true constr
prf 15771:15782 <> orb_true_iff
R15803:15806 basic <> bool ind
R15826:15830 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15819:15821 Coq.Init.Logic <> :type_scope:x_'='_x not
R15810:15812 basic <> orb def
R15817:15818 logic <> b2 var
R15814:15815 logic <> b1 var
R15822:15825 basic <> true constr
R15839:15842 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15833:15834 Coq.Init.Logic <> :type_scope:x_'='_x not
R15831:15832 logic <> b1 var
R15835:15838 basic <> true constr
R15845:15847 Coq.Init.Logic <> :type_scope:x_'='_x not
R15843:15844 logic <> b2 var
R15848:15851 basic <> true constr
R16097:16103 tactics <> <> lib
prf 16113:16123 <> beq_nat_n_n
R16137:16139 Coq.Init.Datatypes <> nat ind
R16153:16155 Coq.Init.Logic <> :type_scope:x_'='_x not
R16142:16148 tactics <> beq_nat def
R16152:16152 logic <> n var
R16150:16150 logic <> n var
R16156:16159 basic <> true constr
prf 16249:16265 <> beq_nat_false_iff
R16284:16286 Coq.Init.Datatypes <> nat ind
R16309:16313 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16301:16303 Coq.Init.Logic <> :type_scope:x_'='_x not
R16290:16296 tactics <> beq_nat def
R16300:16300 logic <> y var
R16298:16298 logic <> x var
R16304:16308 basic <> false constr
R16315:16316 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R16314:16314 logic <> x var
R16317:16317 logic <> y var
R16366:16368 Coq.Init.Logic <> not def
R16479:16489 logic <> beq_nat_n_n thm
R16479:16489 logic <> beq_nat_n_n thm
R16479:16489 logic <> beq_nat_n_n thm
R16726:16728 Coq.Init.Logic <> not def
R16763:16765 Coq.Init.Logic <> not def
def 16821:16828 <> beq_list
R16845:16848 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16850:16853 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16854:16857 basic <> bool ind
R16849:16849 logic <> A var
R16844:16844 logic <> A var
R16867:16870 poly <> list ind
R16872:16872 logic <> A var
R16875:16878 basic <> bool ind
R16894:16895 logic <> l2 var
R16891:16892 logic <> l1 var
R16906:16907 poly <> ::'['_']' not
R16909:16910 poly <> ::'['_']' not
R16915:16918 basic <> true constr
R16924:16925 poly <> ::'['_']' not
R16929:16929 poly <> ::x_':'_x not
R16936:16940 basic <> false constr
R16948:16948 poly <> ::x_':'_x not
R16952:16953 poly <> ::'['_']' not
R16958:16962 basic <> false constr
R16970:16970 poly <> ::x_':'_x not
R16976:16976 poly <> ::x_':'_x not
R16983:16983 basic <> ::x_'&&'_x not
R16993:16997 basic <> ::x_'&&'_x not
R16984:16986 logic <> beq var
R16998:17005 logic <> beq_list def
R17007:17009 logic <> beq var
prf 17031:17047 <> beq_list_true_iff
R17077:17080 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17082:17085 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17086:17089 basic <> bool ind
R17081:17081 logic <> A var
R17076:17076 logic <> A var
R17096:17096 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17143:17151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17212:17212 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17166:17169 poly <> list ind
R17171:17171 logic <> A var
R17200:17204 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17193:17195 Coq.Init.Logic <> :type_scope:x_'='_x not
R17175:17182 logic <> beq_list def
R17191:17192 logic <> l2 var
R17188:17189 logic <> l1 var
R17184:17186 logic <> beq var
R17196:17199 basic <> true constr
R17207:17209 Coq.Init.Logic <> :type_scope:x_'='_x not
R17205:17206 logic <> l1 var
R17210:17211 logic <> l2 var
R17111:17111 logic <> A var
R17131:17135 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17124:17126 Coq.Init.Logic <> :type_scope:x_'='_x not
R17115:17117 logic <> beq var
R17122:17123 logic <> a2 var
R17119:17120 logic <> a1 var
R17127:17130 basic <> true constr
R17138:17140 Coq.Init.Logic <> :type_scope:x_'='_x not
R17136:17137 logic <> a1 var
R17141:17142 logic <> a2 var
R17428:17440 logic <> andb_true_iff thm
R17428:17440 logic <> andb_true_iff thm
R17750:17762 logic <> andb_true_iff thm
R17750:17762 logic <> andb_true_iff thm
prf 17875:17890 <> forallb_true_iff
R17919:17920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17921:17924 basic <> bool ind
R17918:17918 logic <> X var
R17930:17933 poly <> list ind
R17935:17935 logic <> X var
R17965:17969 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17958:17960 Coq.Init.Logic <> :type_scope:x_'='_x not
R17944:17950 tactics <> forallb def
R17957:17957 logic <> l var
R17952:17955 logic <> test var
R17961:17964 basic <> true constr
R17970:17972 logic <> All def
R17999:17999 logic <> l var
R17990:17992 Coq.Init.Logic <> :type_scope:x_'='_x not
R17984:17987 logic <> test var
R17989:17989 logic <> x var
R17993:17996 basic <> true constr
R18091:18103 logic <> andb_true_iff thm
R18091:18103 logic <> andb_true_iff thm
R18260:18272 logic <> andb_true_iff thm
R18260:18272 logic <> andb_true_iff thm
prf 18428:18442 <> excluded_middle
R18465:18468 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18464:18464 logic <> P var
R18469:18469 Coq.Init.Logic <> :type_scope:'~'_x not
R18470:18470 logic <> P var
prf 18506:18532 <> excluded_middle_irrefutable
R18554:18554 Coq.Init.Logic <> :type_scope:'~'_x not
R18555:18556 Coq.Init.Logic <> :type_scope:'~'_x not
R18564:18564 Coq.Init.Logic <> :type_scope:'~'_x not
R18558:18561 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18557:18557 logic <> P var
R18562:18562 Coq.Init.Logic <> :type_scope:'~'_x not
R18563:18563 logic <> P var
R18593:18595 Coq.Init.Logic <> not def
prf 18683:18697 <> not_exists_dist
R18704:18704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18729:18734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18806:18806 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18755:18756 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18754:18754 logic <> X var
R18785:18789 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18805:18805 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18799:18799 logic <> X var
R18802:18802 logic <> P var
R18804:18804 logic <> x var
R18764:18765 Coq.Init.Logic <> :type_scope:'~'_x not
R18784:18784 Coq.Init.Logic <> :type_scope:'~'_x not
R18766:18772 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18776:18777 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18775:18775 logic <> X var
R18778:18779 Coq.Init.Logic <> :type_scope:'~'_x not
R18783:18783 Coq.Init.Logic <> :type_scope:'~'_x not
R18780:18780 logic <> P var
R18782:18782 logic <> x var
R18722:18725 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18721:18721 logic <> Q var
R18726:18726 Coq.Init.Logic <> :type_scope:'~'_x not
R18727:18727 logic <> Q var
R18835:18837 Coq.Init.Logic <> not def
R18855:18857 Coq.Init.Logic <> not def
